<?xml version="1.0" encoding="utf-8"?><feed xmlns="http://www.w3.org/2005/Atom" ><generator uri="https://jekyllrb.com/" version="3.9.5">Jekyll</generator><link href="http://localhost:4000/feed.xml" rel="self" type="application/atom+xml" /><link href="http://localhost:4000/" rel="alternate" type="text/html" /><updated>2024-05-08T11:23:37+02:00</updated><id>http://localhost:4000/feed.xml</id><title type="html">Max‚Äôs AI Playground</title><subtitle></subtitle><entry><title type="html">Single Image Transformations: Exploring Instruct Pix2Pix in Stable Diffusion</title><link href="http://localhost:4000/instruct-pix-to-pix-stable-diffusion/" rel="alternate" type="text/html" title="Single Image Transformations: Exploring Instruct Pix2Pix in Stable Diffusion" /><published>2024-05-08T10:00:00+02:00</published><updated>2024-05-08T10:00:00+02:00</updated><id>http://localhost:4000/instruct-pix-to-pix-stable-diffusion</id><content type="html" xml:base="http://localhost:4000/instruct-pix-to-pix-stable-diffusion/"><![CDATA[<p><strong>What exactly is <em>Pix2Pix</em>?</strong> This Stable Diffusion model transforms images based solely on textual instructions. Timothy Brooks, the <a href="https://www.timothybrooks.com/instruct-pix2pix">model‚Äôs</a> creator, defines it as ‚ÄúLearning to Follow Image Editing Instructions‚Äù. The simplicity of Pix2Pix opens a realm of possibilities for anyone interested in AI-driven image editing.</p>

<p><strong>The Idea</strong>: Transform any image with <em>minimal effort</em>.</p>

<p><strong>The Goal</strong>: To manipulate images quickly and without any prior editing skills (aka Photoshop).</p>

<p><strong>The Use Case</strong>: This exploration started with an aim to automate the generation of YouTube thumbnails by changing facial expressions via simple commands.</p>

<p><strong>The Annoyance</strong>: Traditional photo editing requires time and effort I‚Äôd rather not spend, and manual edits in Photoshop or inpainting in Stable Diffusion often lead to frustrating cycles of trial and error. üò¨</p>

<h3 id="table-of-contents">Table of Contents</h3>
<ol>
  <li><strong>Set Up InstructPix2Pix</strong></li>
  <li><strong>Choose a Base Image</strong></li>
  <li><strong>Select an Effective Prompt</strong></li>
  <li><strong>Examples of Transformations</strong></li>
  <li><strong>Comparisons with Embeddings and epiCPhotoGasm</strong></li>
</ol>

<h2 id="step-1-setting-up-the-instruct-pix2pix-model-macbook-m1">Step 1: Setting Up the Instruct Pix2Pix Model (MacBook M1)</h2>

<h3 id="download-and-select-the-model">Download and Select the Model</h3>
<p>Ensure the web UI is operational by following the <a href="https://github.com/AUTOMATIC1111/stable-diffusion-webui?tab=readme-ov-file#installation-and-running" title="AUTOMATIC1111 stable-diffusion-webui installation">official instructions</a>.</p>

<p><strong>Side note</strong>: All of the following steps were taken on a MacBook M1.</p>

<p>Initially, download the ckpt or safetensors model from the <a href="https://huggingface.co/timbrooks/instruct-pix2pix/tree/main" title="InstructPix2Pix repository at huggingface">Hugging Face repository</a> and place it in the <code class="language-plaintext highlighter-rouge">models\Stable-diffusion</code> directory. Refresh and select the <code class="language-plaintext highlighter-rouge">instruct-pix2pix-00-22000</code> model from the dropdown menu.
<img src="/images/instruct-pix-to-pix-stable-diffusion-ep2/pix2pix-model-selection.png" alt="instruct-pix2pix-00-22000" class="max-w-sm" /></p>

<p><strong>Additional note</strong>:<br />
I encountered issues using ControlNet with the error message: <code class="language-plaintext highlighter-rouge">Cannot recognize the ControlModel</code>. Although it ultimately did not affect the outcomes, to avoid potential issues, I recommend not enabling ControlNet and loading the model directly as a Stable Diffusion checkpoint in case you also get this error.</p>

<h2 id="step-2-choose-your-base-image">Step 2: Choose Your Base Image</h2>
<figure class="max-w-sm">
    <img class="!mb-1" src="/images/instruct-pix-to-pix-stable-diffusion-ep2/max-profile-base.jpg" alt="A younger and prettier version of me üò≥" />
    
        <figcaption>A younger and prettier version of me üò≥</figcaption>
    
</figure>

<h2 id="step-3-crafting-effective-prompts">Step 3: Crafting Effective Prompts</h2>
<p>To maximize the model‚Äôs effectiveness, articulate your desired changes as if you were instructing Photoshop. This model excels when directives are precise, whether it‚Äôs altering the lighting, adjusting colors, or removing and replacing elements.</p>

<p>Here are some successfully tested prompt examples (credit to Andrew from <a href="https://stable-diffusion-art.com/instruct-pix2pix/" title="article on stable-diffusion-art.com">stable-diffusion-art.com</a>):</p>

<ul>
  <li>Change to <code class="language-plaintext highlighter-rouge">style name</code> style, e.g. <code class="language-plaintext highlighter-rouge">Change to cartoon style</code></li>
  <li>Make <code class="language-plaintext highlighter-rouge">person</code> look like <code class="language-plaintext highlighter-rouge">object or person</code>, e.g. <code class="language-plaintext highlighter-rouge">Make him look like a dog</code></li>
  <li>Add <code class="language-plaintext highlighter-rouge">object</code>, e.g. <code class="language-plaintext highlighter-rouge">Add tomatoes to the table top</code></li>
  <li>Replace <code class="language-plaintext highlighter-rouge">object</code> with <code class="language-plaintext highlighter-rouge">something else</code>, e.g. <code class="language-plaintext highlighter-rouge">Replace the water with sand</code></li>
  <li>Put <code class="language-plaintext highlighter-rouge">object or person</code> in <code class="language-plaintext highlighter-rouge">scene or background</code>, e.g. <code class="language-plaintext highlighter-rouge">Put him in latent space</code></li>
  <li>Make it <code class="language-plaintext highlighter-rouge">area, country or city</code>, e.g. <code class="language-plaintext highlighter-rouge">Make it Berlin</code></li>
</ul>

<p><strong>Important</strong>: Set the Denoising strength to 1 to ensure the model functions properly.</p>

<h2 id="4-examples">4. Examples</h2>
<p>Let‚Äôs explore a range of outcomes from successful transformations to‚Ä¶ learning experiences. ü§ì</p>

<div class="mb-8">
    <figure class="xs:flex justify-center">
        <img class="mx-auto xs:mx-1 xs:w-1/2 xs:max-w-96 !mt-0 !mb-1" src="/images/instruct-pix-to-pix-stable-diffusion-ep2/max-profile-base.jpg" alt="showing base image before pix2pix conversion" />
        <img class="mx-auto xs:mx-1 xs:w-1/2 xs:max-w-96 !mt-0 !mb-1" src="/images/instruct-pix-to-pix-stable-diffusion-ep2/max-gold.png" alt="showing pix2pix stable diffusion result of prompt make it look like a golden statue" />
    </figure>
    <div class="mb-1 text-center">
        <code class="language-plaintext highlighter-rouge">prompt: make it look like a golden statue</code>
    </div>
    <div class="language-prompt">
    
Negative prompt: Disfigured, cartoon, blurry, nude
Steps: 24, Sampler: DPM++ 2M, Schedule type: Karras, CFG scale: 8, Image CFG scale: 1.75, Seed: 3207543649, Size: 512x512, Model hash: ffd280ddcf, Model: instruct-pix2pix-00-22000, Denoising strength: 1, Version: v1.9.3
    </div>
    
        <div class="mt-2 bg-teal-100 p-2 text-sm"><span class="font-bold">My opinion</span>: This is one of the prompts from the author's website and it works quite well here, too.</div>
    
</div>
<div class="mb-8">
    <figure class="xs:flex justify-center">
        <img class="mx-auto xs:mx-1 xs:w-1/2 xs:max-w-96 !mt-0 !mb-1" src="/images/instruct-pix-to-pix-stable-diffusion-ep2/max-profile-base.jpg" alt="showing base image before pix2pix conversion" />
        <img class="mx-auto xs:mx-1 xs:w-1/2 xs:max-w-96 !mt-0 !mb-1" src="/images/instruct-pix-to-pix-stable-diffusion-ep2/max-blonde-hair.png" alt="showing pix2pix stable diffusion result of prompt make the hair and eyebrows blond" />
    </figure>
    <div class="mb-1 text-center">
        <code class="language-plaintext highlighter-rouge">prompt: make the hair and eyebrows blond</code>
    </div>
    <div class="language-prompt">
    
Steps: 24, Sampler: DPM++ 2M, Schedule type: Karras, CFG scale: 10, Image CFG scale: 1.75, Seed: 1977613539, Size: 512x512, Model hash: ffd280ddcf, Model: instruct-pix2pix-00-22000, Denoising strength: 1, Version: v1.9.3
    </div>
    
        <div class="mt-2 bg-teal-100 p-2 text-sm"><span class="font-bold">My opinion</span>: Funny, actually.</div>
    
</div>
<div class="mb-8">
    <figure class="xs:flex justify-center">
        <img class="mx-auto xs:mx-1 xs:w-1/2 xs:max-w-96 !mt-0 !mb-1" src="/images/instruct-pix-to-pix-stable-diffusion-ep2/max-profile-base.jpg" alt="showing base image before pix2pix conversion" />
        <img class="mx-auto xs:mx-1 xs:w-1/2 xs:max-w-96 !mt-0 !mb-1" src="/images/instruct-pix-to-pix-stable-diffusion-ep2/max-eyes-closed.png" alt="showing pix2pix stable diffusion result of prompt close their eyes" />
    </figure>
    <div class="mb-1 text-center">
        <code class="language-plaintext highlighter-rouge">prompt: close their eyes</code>
    </div>
    <div class="language-prompt">
    
Negative prompt: Disfigured, cartoon, blurry, nude
Steps: 24, Sampler: DPM++ 2M, Schedule type: Karras, CFG scale: 8, Image CFG scale: 1.6, Seed: 1405665529, Size: 512x512, Model hash: ffd280ddcf, Model: instruct-pix2pix-00-22000, Denoising strength: 1, Version: v1.9.3
    </div>
    
        <div class="mt-2 bg-teal-100 p-2 text-sm"><span class="font-bold">My opinion</span>: This prompt worked very well and it's pretty realistic, too.</div>
    
</div>
<div class="mb-8">
    <figure class="xs:flex justify-center">
        <img class="mx-auto xs:mx-1 xs:w-1/2 xs:max-w-96 !mt-0 !mb-1" src="/images/instruct-pix-to-pix-stable-diffusion-ep2/max-profile-base.jpg" alt="showing base image before pix2pix conversion" />
        <img class="mx-auto xs:mx-1 xs:w-1/2 xs:max-w-96 !mt-0 !mb-1" src="/images/instruct-pix-to-pix-stable-diffusion-ep2/max-furious.png" alt="showing pix2pix stable diffusion result of prompt make him look furious" />
    </figure>
    <div class="mb-1 text-center">
        <code class="language-plaintext highlighter-rouge">prompt: make him look furious</code>
    </div>
    <div class="language-prompt">
    
Negative prompt: bad eyes, low quality
Steps: 40, Sampler: Euler, Schedule type: Automatic, CFG scale: 7.5, Image CFG scale: 1.6, Seed: 1580611629, Size: 512x512, Model hash: ffd280ddcf, Model: instruct-pix2pix-00-22000, Denoising strength: 1, Version: v1.9.3
    </div>
    
        <div class="mt-2 bg-teal-100 p-2 text-sm"><span class="font-bold">My opinion</span>: Excellent result, one of the best transformations.</div>
    
</div>
<div class="mb-8">
    <figure class="xs:flex justify-center">
        <img class="mx-auto xs:mx-1 xs:w-1/2 xs:max-w-96 !mt-0 !mb-1" src="/images/instruct-pix-to-pix-stable-diffusion-ep2/max-profile-base.jpg" alt="showing base image before pix2pix conversion" />
        <img class="mx-auto xs:mx-1 xs:w-1/2 xs:max-w-96 !mt-0 !mb-1" src="/images/instruct-pix-to-pix-stable-diffusion-ep2/max-angry-pix2pix.png" alt="showing pix2pix stable diffusion result of prompt make him angry" />
    </figure>
    <div class="mb-1 text-center">
        <code class="language-plaintext highlighter-rouge">prompt: make him angry</code>
    </div>
    <div class="language-prompt">
    
Steps: 38, Sampler: DPM++ 2M, Schedule type: Karras, CFG scale: 8, Image CFG scale: 1.55, Seed: 2086482578, Size: 512x512, Model hash: ffd280ddcf, Model: instruct-pix2pix-00-22000, Denoising strength: 1, Version: v1.9.3
    </div>
    
        <div class="mt-2 bg-teal-100 p-2 text-sm"><span class="font-bold">My opinion</span>: If I was you, I'd leg it! üî• Quite a good result, but the mouth requires some inpainting.</div>
    
</div>
<div class="mb-8">
    <figure class="xs:flex justify-center">
        <img class="mx-auto xs:mx-1 xs:w-1/2 xs:max-w-96 !mt-0 !mb-1" src="/images/instruct-pix-to-pix-stable-diffusion-ep2/max-profile-base.jpg" alt="showing base image before pix2pix conversion" />
        <img class="mx-auto xs:mx-1 xs:w-1/2 xs:max-w-96 !mt-0 !mb-1" src="/images/instruct-pix-to-pix-stable-diffusion-ep2/max-horror.png" alt="showing pix2pix stable diffusion result of prompt make him terrifying" />
    </figure>
    <div class="mb-1 text-center">
        <code class="language-plaintext highlighter-rouge">prompt: make him terrifying</code>
    </div>
    <div class="language-prompt">
    
 Steps: 50, Sampler: DPM++ 2M, Schedule type: Karras, CFG scale: 9, Image CFG scale: 1.4, Seed: 4091701604, Size: 512x512, Model hash: ffd280ddcf, Model: instruct-pix2pix-00-22000, Denoising strength: 1, Version: v1.9.3
    </div>
    
        <div class="mt-2 bg-teal-100 p-2 text-sm"><span class="font-bold">My opinion</span>: This is just a... fail!</div>
    
</div>
<div class="mb-8">
    <figure class="xs:flex justify-center">
        <img class="mx-auto xs:mx-1 xs:w-1/2 xs:max-w-96 !mt-0 !mb-1" src="/images/instruct-pix-to-pix-stable-diffusion-ep2/max-profile-base.jpg" alt="showing base image before pix2pix conversion" />
        <img class="mx-auto xs:mx-1 xs:w-1/2 xs:max-w-96 !mt-0 !mb-1" src="/images/instruct-pix-to-pix-stable-diffusion-ep2/max-mature.png" alt="showing pix2pix stable diffusion result of prompt make him look more mature" />
    </figure>
    <div class="mb-1 text-center">
        <code class="language-plaintext highlighter-rouge">prompt: make him look more mature</code>
    </div>
    <div class="language-prompt">
    
Negative prompt: bad teeth, bad quality, medium quality, blurry
Steps: 42, Sampler: DPM++ 2M, Schedule type: Karras, CFG scale: 7.5, Image CFG scale: 1.75, Seed: 353877794, Size: 512x512, Model hash: ffd280ddcf, Model: instruct-pix2pix-00-22000, Denoising strength: 1, Version: v1.9.3
    </div>
    
        <div class="mt-2 bg-teal-100 p-2 text-sm"><span class="font-bold">My opinion</span>: Accepted! This is impressive and I could imagine myself looking like this one day, perhaps... ü§î</div>
    
</div>
<div class="mb-8">
    <figure class="xs:flex justify-center">
        <img class="mx-auto xs:mx-1 xs:w-1/2 xs:max-w-96 !mt-0 !mb-1" src="/images/instruct-pix-to-pix-stable-diffusion-ep2/max-profile-base.jpg" alt="showing base image before pix2pix conversion" />
        <img class="mx-auto xs:mx-1 xs:w-1/2 xs:max-w-96 !mt-0 !mb-1" src="/images/instruct-pix-to-pix-stable-diffusion-ep2/max-paint.png" alt="showing pix2pix stable diffusion result of prompt apply face paint" />
    </figure>
    <div class="mb-1 text-center">
        <code class="language-plaintext highlighter-rouge">prompt: apply face paint</code>
    </div>
    <div class="language-prompt">
    
Steps: 50, Sampler: DPM++ 2M, Schedule type: Karras, CFG scale: 7.5, Image CFG scale: 1.5, Seed: 2442579842, Size: 512x512, Model hash: ffd280ddcf, Model: instruct-pix2pix-00-22000, Denoising strength: 1, Version: v1.9.3
    </div>
    
        <div class="mt-2 bg-teal-100 p-2 text-sm"><span class="font-bold">My opinion</span>: I'm undecided on this one. Might have to give it a try some time. üòÖ</div>
    
</div>
<div class="mb-8">
    <figure class="xs:flex justify-center">
        <img class="mx-auto xs:mx-1 xs:w-1/2 xs:max-w-96 !mt-0 !mb-1" src="/images/instruct-pix-to-pix-stable-diffusion-ep2/max-profile-base.jpg" alt="showing base image before pix2pix conversion" />
        <img class="mx-auto xs:mx-1 xs:w-1/2 xs:max-w-96 !mt-0 !mb-1" src="/images/instruct-pix-to-pix-stable-diffusion-ep2/max-pixelate-bg.png" alt="showing pix2pix stable diffusion result of prompt pixelate the background" />
    </figure>
    <div class="mb-1 text-center">
        <code class="language-plaintext highlighter-rouge">prompt: pixelate the background</code>
    </div>
    <div class="language-prompt">
    
Negative prompt: Disfigured, cartoon, blurry, nude
Steps: 24, Sampler: DPM++ 2M, Schedule type: Karras, CFG scale: 8, Image CFG scale: 1.25, Seed: 3683370930, Size: 512x512, Model hash: ffd280ddcf, Model: instruct-pix2pix-00-22000, Denoising strength: 1, Version: v1.9.3
    </div>
    
        <div class="mt-2 bg-teal-100 p-2 text-sm"><span class="font-bold">My opinion</span>: I love the pattern on this.</div>
    
</div>
<div class="mb-8">
    <figure class="xs:flex justify-center">
        <img class="mx-auto xs:mx-1 xs:w-1/2 xs:max-w-96 !mt-0 !mb-1" src="/images/instruct-pix-to-pix-stable-diffusion-ep2/max-profile-base.jpg" alt="showing base image before pix2pix conversion" />
        <img class="mx-auto xs:mx-1 xs:w-1/2 xs:max-w-96 !mt-0 !mb-1" src="/images/instruct-pix-to-pix-stable-diffusion-ep2/max-snow.png" alt="showing pix2pix stable diffusion result of prompt what would it look like if it were snowing?" />
    </figure>
    <div class="mb-1 text-center">
        <code class="language-plaintext highlighter-rouge">prompt: what would it look like if it were snowing?</code>
    </div>
    <div class="language-prompt">
    
Steps: 24, Sampler: DPM++ 2M, Schedule type: Karras, CFG scale: 7.5, Image CFG scale: 1.5, Seed: 538119155, Size: 512x512, Model hash: ffd280ddcf, Model: instruct-pix2pix-00-22000, Denoising strength: 1, Version: v1.9.3
    </div>
    
        <div class="mt-2 bg-teal-100 p-2 text-sm"><span class="font-bold">My opinion</span>: I really like this one. This would have taken ages in Photoshop, at least for me...</div>
    
</div>
<div class="mb-8">
    <figure class="xs:flex justify-center">
        <img class="mx-auto xs:mx-1 xs:w-1/2 xs:max-w-96 !mt-0 !mb-1" src="/images/instruct-pix-to-pix-stable-diffusion-ep2/max-profile-base.jpg" alt="showing base image before pix2pix conversion" />
        <img class="mx-auto xs:mx-1 xs:w-1/2 xs:max-w-96 !mt-0 !mb-1" src="/images/instruct-pix-to-pix-stable-diffusion-ep2/max-suit.png" alt="showing pix2pix stable diffusion result of prompt make them wear a suit" />
    </figure>
    <div class="mb-1 text-center">
        <code class="language-plaintext highlighter-rouge">prompt: make them wear a suit</code>
    </div>
    <div class="language-prompt">
    
Negative prompt: Disfigured, cartoon, blurry, nude
Steps: 30, Sampler: DPM++ 2M, Schedule type: Karras, CFG scale: 8, Image CFG scale: 1.6, Seed: 3460861800, Size: 512x512, Model hash: ffd280ddcf, Model: instruct-pix2pix-00-22000, Denoising strength: 1, Version: v1.9.3
    </div>
    
        <div class="mt-2 bg-teal-100 p-2 text-sm"><span class="font-bold">My opinion</span>: Suit up! üï¥Ô∏è</div>
    
</div>
<div class="mb-8">
    <figure class="xs:flex justify-center">
        <img class="mx-auto xs:mx-1 xs:w-1/2 xs:max-w-96 !mt-0 !mb-1" src="/images/instruct-pix-to-pix-stable-diffusion-ep2/max-profile-base.jpg" alt="showing base image before pix2pix conversion" />
        <img class="mx-auto xs:mx-1 xs:w-1/2 xs:max-w-96 !mt-0 !mb-1" src="/images/instruct-pix-to-pix-stable-diffusion-ep2/max-sunglasses.png" alt="showing pix2pix stable diffusion result of prompt add sunglasses" />
    </figure>
    <div class="mb-1 text-center">
        <code class="language-plaintext highlighter-rouge">prompt: add sunglasses</code>
    </div>
    <div class="language-prompt">
    
Negative prompt: bad teeth, bad quality, medium quality, blurry
Steps: 24, Sampler: DPM++ 2M, Schedule type: Karras, CFG scale: 10, Image CFG scale: 1.75, Seed: 3201085422, Size: 512x512, Model hash: ffd280ddcf, Model: instruct-pix2pix-00-22000, Denoising strength: 1, Version: v1.9.3
    </div>
    
        <div class="mt-2 bg-teal-100 p-2 text-sm"><span class="font-bold">My opinion</span>: Wow, talk about extravagant!</div>
    
</div>
<div class="mb-8">
    <figure class="xs:flex justify-center">
        <img class="mx-auto xs:mx-1 xs:w-1/2 xs:max-w-96 !mt-0 !mb-1" src="/images/instruct-pix-to-pix-stable-diffusion-ep2/max-profile-base.jpg" alt="showing base image before pix2pix conversion" />
        <img class="mx-auto xs:mx-1 xs:w-1/2 xs:max-w-96 !mt-0 !mb-1" src="/images/instruct-pix-to-pix-stable-diffusion-ep2/max-younger.png" alt="showing pix2pix stable diffusion result of prompt make the person 10 years younger" />
    </figure>
    <div class="mb-1 text-center">
        <code class="language-plaintext highlighter-rouge">prompt: make the person 10 years younger</code>
    </div>
    <div class="language-prompt">
    
Negative prompt: Disfigured, cartoon, blurry, nude
Steps: 40, Sampler: DPM++ 2M, Schedule type: Karras, CFG scale: 8, Image CFG scale: 1.5, Seed: 3919771410, Size: 512x512, Model hash: ffd280ddcf, Model: instruct-pix2pix-00-22000, Denoising strength: 1, Version: v1.9.3
    </div>
    
        <div class="mt-2 bg-teal-100 p-2 text-sm"><span class="font-bold">My opinion</span>: Doesn't really look much younger but rather more southern (that means Italian since that is south of Germany)</div>
    
</div>
<div class="mb-8">
    <figure class="xs:flex justify-center">
        <img class="mx-auto xs:mx-1 xs:w-1/2 xs:max-w-96 !mt-0 !mb-1" src="/images/instruct-pix-to-pix-stable-diffusion-ep2/max-profile-base.jpg" alt="showing base image before pix2pix conversion" />
        <img class="mx-auto xs:mx-1 xs:w-1/2 xs:max-w-96 !mt-0 !mb-1" src="/images/instruct-pix-to-pix-stable-diffusion-ep2/max-celebrity1.png" alt="showing pix2pix stable diffusion result of prompt make them look like a celebrity" />
    </figure>
    <div class="mb-1 text-center">
        <code class="language-plaintext highlighter-rouge">prompt: make them look like a celebrity</code>
    </div>
    <div class="language-prompt">
    
Negative prompt: Disfigured, cartoon, blurry, nude
Steps: 36, Sampler: DPM++ 2M, Schedule type: Karras, CFG scale: 8.5, Image CFG scale: 1.1, Seed: 1197305648, Size: 512x512, Model hash: ffd280ddcf, Model: instruct-pix2pix-00-22000, Denoising strength: 1, Version: v1.9.3
    </div>
    
        <div class="mt-2 bg-teal-100 p-2 text-sm"><span class="font-bold">My opinion</span>: Seems like I might need a nose job and a hairstyle update in the middle...</div>
    
</div>
<div class="mb-8">
    <figure class="xs:flex justify-center">
        <img class="mx-auto xs:mx-1 xs:w-1/2 xs:max-w-96 !mt-0 !mb-1" src="/images/instruct-pix-to-pix-stable-diffusion-ep2/max-profile-base.jpg" alt="showing base image before pix2pix conversion" />
        <img class="mx-auto xs:mx-1 xs:w-1/2 xs:max-w-96 !mt-0 !mb-1" src="/images/instruct-pix-to-pix-stable-diffusion-ep2/max-celebrity2.png" alt="showing pix2pix stable diffusion result of prompt make them look like a celebrity" />
    </figure>
    <div class="mb-1 text-center">
        <code class="language-plaintext highlighter-rouge">prompt: make them look like a celebrity</code>
    </div>
    <div class="language-prompt">
    
Negative prompt: Disfigured, cartoon, blurry, nude
Steps: 36, Sampler: DPM++ 2M, Schedule type: Karras, CFG scale: 8.5, Image CFG scale: 1.1, Seed: 1197305647, Size: 512x512, Model hash: ffd280ddcf, Model: instruct-pix2pix-00-22000, Denoising strength: 1, Version: v1.9.3
    </div>
    
        <div class="mt-2 bg-teal-100 p-2 text-sm"><span class="font-bold">My opinion</span>: A sexy version of me.</div>
    
</div>
<div class="mb-8">
    <figure class="xs:flex justify-center">
        <img class="mx-auto xs:mx-1 xs:w-1/2 xs:max-w-96 !mt-0 !mb-1" src="/images/instruct-pix-to-pix-stable-diffusion-ep2/max-profile-base.jpg" alt="showing base image before pix2pix conversion" />
        <img class="mx-auto xs:mx-1 xs:w-1/2 xs:max-w-96 !mt-0 !mb-1" src="/images/instruct-pix-to-pix-stable-diffusion-ep2/max-hair-gray.png" alt="showing pix2pix stable diffusion result of prompt make the hair gray" />
    </figure>
    <div class="mb-1 text-center">
        <code class="language-plaintext highlighter-rouge">prompt: make the hair gray</code>
    </div>
    <div class="language-prompt">
    
Steps: 42, Sampler: DPM++ 2M, Schedule type: Karras, CFG scale: 7.5, Image CFG scale: 1.5, Seed: 2180229889, Size: 512x512, Model hash: ffd280ddcf, Model: instruct-pix2pix-00-22000, Denoising strength: 1, Version: v1.9.3
    </div>
    
        <div class="mt-2 bg-teal-100 p-2 text-sm"><span class="font-bold">My opinion</span>: One more version of sexy me since it's so much fun!</div>
    
</div>
<div class="mb-8">
    <figure class="xs:flex justify-center">
        <img class="mx-auto xs:mx-1 xs:w-1/2 xs:max-w-96 !mt-0 !mb-1" src="/images/instruct-pix-to-pix-stable-diffusion-ep2/max-profile-base.jpg" alt="showing base image before pix2pix conversion" />
        <img class="mx-auto xs:mx-1 xs:w-1/2 xs:max-w-96 !mt-0 !mb-1" src="/images/instruct-pix-to-pix-stable-diffusion-ep2/max-leather-jacket.png" alt="showing pix2pix stable diffusion result of prompt make his sweater a leather jacket" />
    </figure>
    <div class="mb-1 text-center">
        <code class="language-plaintext highlighter-rouge">prompt: make his sweater a leather jacket</code>
    </div>
    <div class="language-prompt">
    
Steps: 24, Sampler: DPM++ 2M, Schedule type: Karras, CFG scale: 7.5, Image CFG scale: 1.5, Seed: 291088540, Size: 512x512, Model hash: ffd280ddcf, Model: instruct-pix2pix-00-22000, Denoising strength: 1, Version: v1.9.3
    </div>
    
        <div class="mt-2 bg-teal-100 p-2 text-sm"><span class="font-bold">My opinion</span>: Impressive, but it looks almost like there's also a leather bag on the top of the left shoulder. I suppose this is due to the source image being a bit wrinkly in that area.</div>
    
</div>

<h3 id="observations">Observations</h3>
<p>Pix2Pix shines in style changes and object replacement but struggles with complex facial expressions and scenery adjustments. The key to make it work often lies in adjusting the <code class="language-plaintext highlighter-rouge">Image CFG</code> and CFG Scales based on what the prompt demands. It fails on viewpoint changes and sometimes it fails to isolate the specified object.</p>

<p>If an image doesn‚Äôt change at all, usually you‚Äôd lower either the Image CFG Scale (try 1.25 or even lower if 1.5 does nothing for you) or increase the CFG Scale of the actual prompt (try 8-9 if 7.5 was your baseline).</p>

<p>Evoking strong emotions from a neutral facial expression is challenging with Pix2Pix. In such cases, I recommend using a custom embedding or checkpoint, as illustrated below.</p>

<h3 id="takeaways">Takeaways</h3>

<p><strong>Challenges</strong>: Changing facial expressions is as tough as traditional image editing. Subtle changes are more reliably achieved than complete overhauls.</p>

<p><strong>Strengths</strong>: Ideal for straightforward tasks like color changes or background swaps.</p>

<p><strong>Limitations</strong>: Struggles with dramatic emotional expressions due to issues with detailing in areas like the mouth and eyes.</p>

<p>Remember, the effectiveness of Pix2Pix can vary dramatically based on the specificity of your prompts and the settings you choose. What works in Photoshop can often be replicated here, albeit with some practice and patience.</p>

<h2 id="taking-it-further">Taking It further</h2>

<h3 id="changing-facial-expressions">Changing Facial Expressions</h3>
<p>To more effectively alter facial expressions, an alternative approach using custom embeddings proves more promising.</p>

<p>In order to accomplish this, we need to use another method. I explored several embeddings over at <a href="https://civitai.com/models/8860">civitai</a> such as <a href="https://civitai.com/models/8860?modelVersionId=10467">Nervous512</a>, <a href="https://civitai.com/models/8860?modelVersionId=10465">Grin512</a> or <a href="https://civitai.com/models/8860?modelVersionId=10471">Sad512</a>.</p>

<p>Here are some specific emotions tailored for different expressions:</p>

<ul>
  <li><a href="https://civitai.com/models/8860?modelVersionId=10464">SCG Emotions: Smile512</a></li>
  <li><a href="https://civitai.com/models/8860?modelVersionId=10468">SCG Emotions: Shock512</a></li>
  <li><a href="https://civitai.com/models/8860?modelVersionId=10470">SCG Emotions: Angry512</a></li>
</ul>

<p>After downloading these embeddings, simply place them in the <code class="language-plaintext highlighter-rouge">embeddings</code> folder and use them as follows:</p>
<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>a &lt;embedding_name&gt; man, e.g. a happy512 man or a angry512 man
</code></pre></div></div>

<h2 id="5-examples-using-embeddings">5. Examples Using Embeddings</h2>

<div class="mb-8">
    <figure class="xs:flex justify-center">
        <img class="mx-auto xs:mx-1 xs:w-1/2 xs:max-w-96 !mt-0 !mb-1" src="/images/instruct-pix-to-pix-stable-diffusion-ep2/max-profile-base.jpg" alt="showing base image before pix2pix conversion" />
        <img class="mx-auto xs:mx-1 xs:w-1/2 xs:max-w-96 !mt-0 !mb-1" src="/images/instruct-pix-to-pix-stable-diffusion-ep2/max-smile.png" alt="showing pix2pix stable diffusion result of prompt a happy512 man" />
    </figure>
    <div class="mb-1 text-center">
        <code class="language-plaintext highlighter-rouge">prompt: a happy512 man</code>
    </div>
    <div class="language-prompt">
    
Steps: 32, Sampler: DPM++ 2M, Schedule type: Karras, CFG scale: 7.5, Image CFG scale: 1.5, Seed: 481831985, Size: 512x512, Model hash: ffd280ddcf, Model: instruct-pix2pix-00-22000, Denoising strength: 1, TI hashes: "happy512: 4fa643103a06", Version: v1.9.3
    </div>
    
        <div class="mt-2 bg-teal-100 p-2 text-sm"><span class="font-bold">My opinion</span>: Achieving a realistic smile is challenging. The embedding has a hard time to get the teeth right. Additional inpainting is required.</div>
    
</div>
<div class="mb-8">
    <figure class="xs:flex justify-center">
        <img class="mx-auto xs:mx-1 xs:w-1/2 xs:max-w-96 !mt-0 !mb-1" src="/images/instruct-pix-to-pix-stable-diffusion-ep2/max-profile-base.jpg" alt="showing base image before pix2pix conversion" />
        <img class="mx-auto xs:mx-1 xs:w-1/2 xs:max-w-96 !mt-0 !mb-1" src="/images/instruct-pix-to-pix-stable-diffusion-ep2/max-smile512-bad-teeth.png" alt="showing pix2pix stable diffusion result of prompt a portrait of smile512 man" />
    </figure>
    <div class="mb-1 text-center">
        <code class="language-plaintext highlighter-rouge">prompt: a portrait of smile512 man</code>
    </div>
    <div class="language-prompt">
    
Negative prompt: low quality, deformed
Steps: 30, Sampler: DPM++ 2M, Schedule type: Karras, CFG scale: 7.5, Image CFG scale: 1.9, Seed: 1944199414, Size: 512x512, Model hash: ffd280ddcf, Model: instruct-pix2pix-00-22000, Denoising strength: 1, Version: v1.9.3
    </div>
    
        <div class="mt-2 bg-teal-100 p-2 text-sm"><span class="font-bold">My opinion</span>: Teeth are slightly better, but not great either. We'll have to make the extra effort and use inpainting here as well.</div>
    
</div>

<p>Using inpainting might yield similar results, but it requires more effort to manually create masks for areas like the eyes and cheeks. In contrast, using an embedding automates this process, considering the entire face without the need for detailed manual adjustments.</p>

<h3 id="in-comparison">In Comparison</h3>
<p>Let‚Äôs compare pix2pix with the <code class="language-plaintext highlighter-rouge">smile512</code> embedding:</p>
<div class="mb-8">
    <div class="xs:flex justify-center">
        <div class="xs:w-1/2 xs:max-w-96 xs:mx-1">
            <figure>
                <img class="mx-auto !mt-0 !mb-1" src="/images/instruct-pix-to-pix-stable-diffusion-ep2/max-smile512-bad-teeth.png" alt="showing result of pix2pix using prompt make him smile" />
            </figure>
            <div class="mb-1 text-center">
                <code class="language-plaintext highlighter-rouge">prompt: make him smile</code>
            </div>
            <div class="language-prompt">
            
Negative prompt: low quality, deformed
Steps: 30, Sampler: DPM++ 2M, Schedule type: Karras, CFG scale: 7.5, Image CFG scale: 1.9, Seed: 1944199414, Size: 512x512, Model hash: ffd280ddcf, Model: instruct-pix2pix-00-22000, Denoising strength: 1, Version: v1.9.3
            </div>
        </div>
        <div class="xs:w-1/2 xs:max-w-96 xs:mx-1">
            <figure>
                <img class="mx-auto !mt-0 !mb-1" src="/images/instruct-pix-to-pix-stable-diffusion-ep2/max-smile512.png" alt="showing result of embedding using prompt a smile512 man" />
            </figure>
            <div class="mb-1 text-center">
                <code class="language-plaintext highlighter-rouge">prompt: a smile512 man</code>
            </div>
            <div class="language-prompt">
            
Negative prompt: low quality, deformed
Steps: 33, Sampler: DPM++ 2M, Schedule type: Karras, CFG scale: 7.5, Image CFG scale: 1.8, Seed: 2661397260, Size: 512x512, Model hash: ffd280ddcf, Model: instruct-pix2pix-00-22000, Denoising strength: 1, TI hashes: "smile512: 2ad4e0cac932", Version: v1.9.3
            </div>
        </div>
    </div>
    
        <div class="mt-2 bg-teal-100 p-2 text-sm"><span class="font-bold">My opinion</span>: Tough to say which one is the winner here... Both aren't exactly great. It's probably a tie.</div>
    
</div>

<p>Now let‚Äôs compare pix2pix with the <code class="language-plaintext highlighter-rouge">sad512</code> embedding:</p>
<div class="mb-8">
    <div class="xs:flex justify-center">
        <div class="xs:w-1/2 xs:max-w-96 xs:mx-1">
            <figure>
                <img class="mx-auto !mt-0 !mb-1" src="/images/instruct-pix-to-pix-stable-diffusion-ep2/max-sad.png" alt="showing result of pix2pix using prompt make him ((sad))" />
            </figure>
            <div class="mb-1 text-center">
                <code class="language-plaintext highlighter-rouge">prompt: make him ((sad))</code>
            </div>
            <div class="language-prompt">
            
Negative prompt: low quality, deformed
Steps: 24, Sampler: DPM++ 2M, Schedule type: Karras, CFG scale: 8, Image CFG scale: 1.5, Seed: 3712488430, Size: 512x512, Model hash: ffd280ddcf, Model: instruct-pix2pix-00-22000, Denoising strength: 1, Version: v1.9.3
            </div>
        </div>
        <div class="xs:w-1/2 xs:max-w-96 xs:mx-1">
            <figure>
                <img class="mx-auto !mt-0 !mb-1" src="/images/instruct-pix-to-pix-stable-diffusion-ep2/max-sad512.png" alt="showing result of embedding using prompt a portrait of a (sad512) man" />
            </figure>
            <div class="mb-1 text-center">
                <code class="language-plaintext highlighter-rouge">prompt: a portrait of a (sad512) man</code>
            </div>
            <div class="language-prompt">
            
Negative prompt: low quality, deformed
Steps: 32, Sampler: DPM++ 2M, Schedule type: Karras, CFG scale: 8, Image CFG scale: 1.35, Seed: 1736296393, Size: 512x512, Model hash: ffd280ddcf, Model: instruct-pix2pix-00-22000, Denoising strength: 1, TI hashes: "sad512: d27225db52e6", Version: v1.9.3
            </div>
        </div>
    </div>
    
        <div class="mt-2 bg-teal-100 p-2 text-sm"><span class="font-bold">My opinion</span>: Rendered a deeper sadness but introduced some unwanted color shifts. I'd say left (pix2pix) is the winner here.</div>
    
</div>

<h3 id="alternate-approach-using-adetailer-and-epicphotogasm">Alternate Approach Using ADetailer and epiCPhotoGasm</h3>
<p>A popular checkpoint on civitai, <a href="https://civitai.com/models/132632/epicphotogasm">epiCPhotoGasm</a>, offers an alternate method for facial manipulation. After downloading, place it in your models\Stable-Diffusion folder. ADetailer, utilizing <code class="language-plaintext highlighter-rouge">face_yolov8n.pt</code>, focuses modifications on facial features when img2img is enabled‚Äîideal for precise adjustments.</p>

<p>Interestingly, epiCPhotoGasm operates nearly twice as fast as the Pix2Pix model on my setup, showing promising results:</p>

<h4 id="comparative-outcomes-using-adetailer-and-epicphotogasm">Comparative Outcomes Using ADetailer and epiCPhotoGasm</h4>

<div class="mb-8">
    <div class="xs:flex justify-center">
        <div class="xs:w-1/2 xs:max-w-96 xs:mx-1">
            <figure>
                <img class="mx-auto !mt-0 !mb-1" src="/images/instruct-pix-to-pix-stable-diffusion-ep2/max-sad.png" alt="showing result of pix2pix using prompt make him ((sad))" />
            </figure>
            <div class="mb-1 text-center">
                <code class="language-plaintext highlighter-rouge">prompt: make him ((sad))</code>
            </div>
            <div class="language-prompt">
            
Negative prompt: low quality, deformed
Steps: 24, Sampler: DPM++ 2M, Schedule type: Karras, CFG scale: 8, Image CFG scale: 1.5, Seed: 3712488430, Size: 512x512, Model hash: ffd280ddcf, Model: instruct-pix2pix-00-22000, Denoising strength: 1, Version: v1.9.3
            </div>
        </div>
        <div class="xs:w-1/2 xs:max-w-96 xs:mx-1">
            <figure>
                <img class="mx-auto !mt-0 !mb-1" src="/images/instruct-pix-to-pix-stable-diffusion-ep2/max-sad-epicphotogasm.png" alt="showing result of embedding using prompt a portrait of a ((sad)) man" />
            </figure>
            <div class="mb-1 text-center">
                <code class="language-plaintext highlighter-rouge">prompt: a portrait of a ((sad)) man</code>
            </div>
            <div class="language-prompt">
            
Steps: 1, Sampler: Euler, Schedule type: Automatic, CFG scale: 7.5, Seed: 1373581547, Size: 128x128, Model hash: e44c7b30c6, Model: epicphotogasm_ultimateFidelity, Denoising strength: 1, ADetailer model: face_yolov8n.pt, ADetailer confidence: 0.3, ADetailer dilate erode: 4, ADetailer mask blur: 4, ADetailer denoising strength: 0.45, ADetailer inpaint only masked: True, ADetailer inpaint padding: 96, ADetailer use separate CFG scale: True, ADetailer CFG scale: 9.0, ADetailer use separate CLIP skip: True, ADetailer CLIP skip: 2, ADetailer version: 24.4.2, Version: v1.9.3
            </div>
        </div>
    </div>
    
        <div class="mt-2 bg-teal-100 p-2 text-sm"><span class="font-bold">My opinion</span>: Pix2Pix offers a reliable baseline, while epiCPhotoGasm allows for more nuanced expressions with some trade-offs.</div>
    
</div>

<div class="mb-8">
    <div class="xs:flex justify-center">
        <div class="xs:w-1/2 xs:max-w-96 xs:mx-1">
            <figure>
                <img class="mx-auto !mt-0 !mb-1" src="/images/instruct-pix-to-pix-stable-diffusion-ep2/max-shocked.png" alt="showing result of pix2pix using prompt make him look (shocked)" />
            </figure>
            <div class="mb-1 text-center">
                <code class="language-plaintext highlighter-rouge">prompt: make him look (shocked)</code>
            </div>
            <div class="language-prompt">
            Steps: 30, Sampler: DPM++ 2M, Schedule type: Karras, CFG scale: 8.5, Image CFG scale: 1.45, Seed: 3780110914, Size: 512x512, Model hash: ffd280ddcf, Model: instruct-pix2pix-00-22000, Denoising strength: 1, Version: v1.9.3
            </div>
        </div>
        <div class="xs:w-1/2 xs:max-w-96 xs:mx-1">
            <figure>
                <img class="mx-auto !mt-0 !mb-1" src="/images/instruct-pix-to-pix-stable-diffusion-ep2/max-shocked-epicphotogasm.png" alt="showing result of embedding using prompt a portrait of a ((shocked)) man" />
            </figure>
            <div class="mb-1 text-center">
                <code class="language-plaintext highlighter-rouge">prompt: a portrait of a ((shocked)) man</code>
            </div>
            <div class="language-prompt">
            Steps: 1, Sampler: Euler, Schedule type: Automatic, CFG scale: 10, Seed: 626819233, Size: 128x128, Model hash: e44c7b30c6, Model: epicphotogasm_ultimateFidelity, Denoising strength: 1, ADetailer model: face_yolov8n.pt, ADetailer confidence: 0.3, ADetailer dilate erode: 4, ADetailer mask blur: 4, ADetailer denoising strength: 0.44, ADetailer inpaint only masked: True, ADetailer inpaint padding: 84, ADetailer use separate CFG scale: True, ADetailer CFG scale: 8.5, ADetailer use separate CLIP skip: True, ADetailer CLIP skip: 2, ADetailer version: 24.4.2, Version: v1.9.3
            </div>
        </div>
    </div>
    
        <div class="mt-2 bg-teal-100 p-2 text-sm"><span class="font-bold">My opinion</span>: This one was tough for pix2px, as seems to be the case when trying to use strong facial expressions such as shock. epiCPhotoGasm is the clear winner here.</div>
    
</div>

<p>The <code class="language-plaintext highlighter-rouge">Inpaint denoising strength</code> is crucial here. The default setting of 0.4 generally works well, but slight adjustments can greatly influence the outcome, sometimes at the expense of character recognizability.</p>

<p>Experiment with <code class="language-plaintext highlighter-rouge">Inpaint only masked padding, pixels</code> to potentially achieve a broader range of facial expressions. Increasing this setting to about 100 has proven effective in some of my tests.</p>

<p>Here are the complete settings I‚Äôve used in ADetailer for most of my comparisons:
<img src="/images/instruct-pix-to-pix-stable-diffusion-ep2/adetailer-settings.png" alt="ADetailer Settings" /></p>

<p>This model works very well with age manipulation and ethnicities. Here are some examples:</p>
<div class="mb-8">
    <figure class="xs:flex justify-center">
        <img class="mx-auto xs:mx-1 xs:w-1/2 xs:max-w-96 !mt-0 !mb-1" src="/images/instruct-pix-to-pix-stable-diffusion-ep2/max-profile-base.jpg" alt="showing base image before pix2pix conversion" />
        <img class="mx-auto xs:mx-1 xs:w-1/2 xs:max-w-96 !mt-0 !mb-1" src="/images/instruct-pix-to-pix-stable-diffusion-ep2/max-aged-epicphotogasm.png" alt="showing pix2pix stable diffusion result of prompt a portrait of an old man" />
    </figure>
    <div class="mb-1 text-center">
        <code class="language-plaintext highlighter-rouge">prompt: a portrait of an old man</code>
    </div>
    <div class="language-prompt">
    
Steps: 1, Sampler: Euler, Schedule type: Automatic, CFG scale: 7.5, Seed: 2440307707, Size: 128x128, Model hash: e44c7b30c6, Model: epicphotogasm_ultimateFidelity, Denoising strength: 1, ADetailer model: person_yolov8n-seg.pt, ADetailer confidence: 0.3, ADetailer dilate erode: 4, ADetailer mask blur: 4, ADetailer denoising strength: 0.35, ADetailer inpaint only masked: True, ADetailer inpaint padding: 64, ADetailer use separate CFG scale: True, ADetailer CFG scale: 8.0, ADetailer use separate CLIP skip: True, ADetailer CLIP skip: 2, ADetailer version: 24.4.2, Version: v1.9.3
    </div>
    
        <div class="mt-2 bg-teal-100 p-2 text-sm"><span class="font-bold">My opinion</span>: Very impressive!</div>
    
</div>
<div class="mb-8">
    <figure class="xs:flex justify-center">
        <img class="mx-auto xs:mx-1 xs:w-1/2 xs:max-w-96 !mt-0 !mb-1" src="/images/instruct-pix-to-pix-stable-diffusion-ep2/max-profile-base.jpg" alt="showing base image before pix2pix conversion" />
        <img class="mx-auto xs:mx-1 xs:w-1/2 xs:max-w-96 !mt-0 !mb-1" src="/images/instruct-pix-to-pix-stable-diffusion-ep2/max-young-epicphotogasm.png" alt="showing pix2pix stable diffusion result of prompt a portrait of a young man" />
    </figure>
    <div class="mb-1 text-center">
        <code class="language-plaintext highlighter-rouge">prompt: a portrait of a young man</code>
    </div>
    <div class="language-prompt">
    
Steps: 1, Sampler: Euler, Schedule type: Automatic, CFG scale: 7.5, Seed: 1667935321, Size: 128x128, Model hash: e44c7b30c6, Model: epicphotogasm_ultimateFidelity, Denoising strength: 1, ADetailer model: person_yolov8n-seg.pt, ADetailer confidence: 0.3, ADetailer dilate erode: 4, ADetailer mask blur: 4, ADetailer denoising strength: 0.36, ADetailer inpaint only masked: True, ADetailer inpaint padding: 64, ADetailer use separate CFG scale: True, ADetailer CFG scale: 8.5, ADetailer use separate CLIP skip: True, ADetailer CLIP skip: 2, ADetailer version: 24.4.2, Version: v1.9.3
    </div>
    
        <div class="mt-2 bg-teal-100 p-2 text-sm"><span class="font-bold">My opinion</span>: Besides minor issues with the right eye, a very good result.</div>
    
</div>
<div class="mb-8">
    <figure class="xs:flex justify-center">
        <img class="mx-auto xs:mx-1 xs:w-1/2 xs:max-w-96 !mt-0 !mb-1" src="/images/instruct-pix-to-pix-stable-diffusion-ep2/max-profile-base.jpg" alt="showing base image before pix2pix conversion" />
        <img class="mx-auto xs:mx-1 xs:w-1/2 xs:max-w-96 !mt-0 !mb-1" src="/images/instruct-pix-to-pix-stable-diffusion-ep2/max-japanese-epicphotogasm.png" alt="showing pix2pix stable diffusion result of prompt a portrait of a japanese man" />
    </figure>
    <div class="mb-1 text-center">
        <code class="language-plaintext highlighter-rouge">prompt: a portrait of a japanese man</code>
    </div>
    <div class="language-prompt">
    
Steps: 1, Sampler: Euler, Schedule type: Automatic, CFG scale: 7.5, Seed: 1776054093, Size: 128x128, Model hash: e44c7b30c6, Model: epicphotogasm_ultimateFidelity, Denoising strength: 1, ADetailer model: person_yolov8n-seg.pt, ADetailer confidence: 0.3, ADetailer dilate erode: 4, ADetailer mask blur: 4, ADetailer denoising strength: 0.36, ADetailer inpaint only masked: True, ADetailer inpaint padding: 64, ADetailer use separate CFG scale: True, ADetailer CFG scale: 8.5, ADetailer use separate CLIP skip: True, ADetailer CLIP skip: 2, ADetailer version: 24.4.2, Version: v1.9.3
    </div>
    
        <div class="mt-2 bg-teal-100 p-2 text-sm"><span class="font-bold">My opinion</span>: Interesting for sure. üáØüáµ</div>
    
</div>

<h3 id="conclusion">Conclusion</h3>
<p>While epiCPhotoGasm has outperformed other methods in terms of speed and ease of use for my specific needs‚Äîsuch as altering facial expressions from neutral to more expressive states‚Äîit is not without its flaws. The results, while quick, may not always be reliable enough for applications like YouTube thumbnail generation where accuracy in expression and a flawless result is crucial.</p>

<p>Unfortunately, the current solutions require significant tweaking to meet my needs fully. In my opinion, the currently available methods aren‚Äôt quite there yet without going the extra mile or adding a disproportionate ton of effort.</p>

<p>Check below for an <a href="https://stylus-diffusion.github.io/">interesting upcoming project</a> that I‚Äôll be testing out once the code has been released.</p>

<h3 id="tools-used-in-this-post">Tools Used In This Post</h3>
<ul>
  <li>Stable Diffusion web UI (<a href="https://github.com/AUTOMATIC1111/">AUTOMATIC1111</a>) v1.9.3 (using Mac OS Sonoma 14.3)</li>
  <li>Models: <a href="https://huggingface.co/timbrooks/instruct-pix2pix/resolve/main/instruct-pix2pix-00-22000.ckpt?download=true">instruct-pix2pix-00-22000.ckpt</a> and <a href="https://civitai.com/models/132632/epicphotogasm">epiCPhotoGasm model</a></li>
</ul>

<h3 id="further-reading-and-resources">Further Reading and Resources</h3>
<ul>
  <li><a href="https://huggingface.co/timbrooks/instruct-pix2pix">Instruct Pix2Pix at Hugging Face</a></li>
  <li><a href="https://stable-diffusion-art.com/instruct-pix2pix/">Stable Diffusion and Instruct Pix2Pix Details</a></li>
  <li><a href="https://www.reddit.com/r/StableDiffusion/comments/18zi2s8/complete_guide_on_how_to_use_adetailer_after/">Using ADetailer Settings Guide on Reddit</a></li>
</ul>

<p>There are two interesting projects that have just popped up (early May 2024):</p>
<ul>
  <li><a href="https://github.com/stylus-diffusion/stylus">https://github.com/stylus-diffusion/stylus</a></li>
  <li><a href="https://layered-diffusion-brushes.github.io/">https://layered-diffusion-brushes.github.io/</a></li>
</ul>

<p>Both of these look promising and may be able to more easily alter facial expressions.
Stay tuned as I‚Äôll be test driving new methods soon.</p>]]></content><author><name></name></author><category term="stable-diffusion" /><category term="pix2pix" /><summary type="html"><![CDATA[What exactly is Pix2Pix? This Stable Diffusion model transforms images based solely on textual instructions. Timothy Brooks, the model‚Äôs creator, defines it as ‚ÄúLearning to Follow Image Editing Instructions‚Äù. The simplicity of Pix2Pix opens a realm of possibilities for anyone interested in AI-driven image editing.]]></summary><media:thumbnail xmlns:media="http://search.yahoo.com/mrss/" url="http://localhost:4000/images/instruct-pix-to-pix-stable-diffusion-ep2/cover.jpeg" /><media:content medium="image" url="http://localhost:4000/images/instruct-pix-to-pix-stable-diffusion-ep2/cover.jpeg" xmlns:media="http://search.yahoo.com/mrss/" /></entry><entry><title type="html">How I use ChatGPT as my personal carsharing agent üöÄ</title><link href="http://localhost:4000/custom-gpt-carsharing-agent/" rel="alternate" type="text/html" title="How I use ChatGPT as my personal carsharing agent üöÄ" /><published>2024-04-28T10:00:00+02:00</published><updated>2024-04-28T10:00:00+02:00</updated><id>http://localhost:4000/custom-gpt-carsharing-agent</id><content type="html" xml:base="http://localhost:4000/custom-gpt-carsharing-agent/"><![CDATA[<p><strong>The idea</strong>: Employ a customized GPT to handle genuinely useful tasks for me.</p>

<p><strong>The goal</strong>: Imagine booking a car for tomorrow morning without lifting a finger, all while keeping my eyes on the TV and enjoying a football game on the sofa.</p>

<p><strong>The actual use case</strong>: Typically, I book the same few cars, always opting for those nearest to my home. There‚Äôs a routine: if the closest carsharing spot (about 100 meters away) is out, I check the next one (200 meters away), and so on. The quest continues until I find a vehicle within a reasonable walking distance. Usually, it‚Äôs just for a short stint‚Äîmaybe an hour or two.</p>

<p><strong>The annoyance</strong>:
It‚Äôs a repetitive drill. I power up the laptop, navigate to the carsharing site, input the date and time, hunt for the usual car (cheapest and closest, obviously), and book it‚Äîonly to then go back to whatever I was doing before. üì∫</p>

<p><strong>The context</strong>: In Freiburg, Germany, I have access to two carsharing providers, each utilizing an (unofficial) API through their web and mobile apps.</p>

<h3 id="steps-to-accomplish-this-feat">Steps to Accomplish This Feat:</h3>
<ol>
  <li><strong>Inspect the API</strong>: Understand how authentication works and scrutinize the specific requests needed to find and book cars for selected dates and times.</li>
  <li><strong>Craft an API Wrapper</strong>: Simplify interaction with the API by building a wrapper for debugging and easier request management. This limits how much the GPT needs to know, reducing potential errors.</li>
  <li><strong>Configure the Custom GPT</strong>: Equip it with precise instructions and integrate several endpoints using the OpenAPI YAML specification.</li>
  <li><strong>Run the API Wrapper as a Daemon</strong>: Host it on a publicly available web server to keep it accessible and operational.</li>
  <li><strong>Make Booking a Joy</strong>: Simplify and streamline the process. üöó</li>
</ol>

<p>Ready to get started? Grab the code and dive in with me:<br />
<a href="https://github.com/MaxAIPlayground/gpt-carsharing-agent" title="MaxAIPlayground/gpt-carsharing-agent" target="_blank">github.com/MaxAIPlayground/gpt-carsharing-agent</a></p>

<h2 id="step-1-inspect-the-third-party-api">Step 1: Inspect the Third-Party API</h2>

<p>Base URL for all API Calls:
<code class="language-plaintext highlighter-rouge">https://de1.cantamen.de/casirest/v3/</code></p>

<h3 id="authentication">Authentication</h3>
<p>First up, let‚Äôs figure out the authentication scheme. All requests to this API need an X-API-Key in the header:</p>

<p><img src="/images/custom-gpt-ep1/x-api-key.png" alt="X-API-Key" class="max-w-sm lg:max-w-xl" /></p>

<p>A bit of detective work revealed that this key is actually revealed in the JavaScript app payload:</p>

<p><img src="/images/custom-gpt-ep1/x-api-key-js.png" alt="X-API-Key" /></p>

<p>This key can change, but for now, I‚Äôll just manually update it when needed. Ideally, we could automate the extraction of this X-API-Key, but for this walkthrough, I‚Äôm going to hardcode it into our API wrapper (details below).</p>

<p><strong>Quick note</strong>: You might have noticed different keys in my screenshots ‚Äî they were taken days apart, so no mix-up there! üòâ</p>

<p>Alright, moving onto actual authentication. The app sends a POST request to the tokens endpoint, using expand=customerId as a query parameter. Here‚Äôs how the payload looks, using my email and password, along with a provId‚Äîfor our example, that‚Äôs the ‚ÄúGr√ºne Flotte‚Äù Carsharing provider:</p>

<p><img src="/images/custom-gpt-ep1/login-post-tokens-request.png" alt="Login" class="max-w-sm lg:max-w-2xl" /></p>

<p>If successful, the response includes a unique token and our personal customerId (which, by the way, is different from the user-facing customer number). Here‚Äôs what we get back:</p>

<p><img src="/images/custom-gpt-ep1/login-post-tokens-response.png" alt="Login" class="max-w-sm lg:max-w-2xl" /></p>

<p>The timeout timestamp appears to be a mechanism to discard the token on the backend if it isn‚Äôt used soon after being issued.</p>

<p>Through some experimentation, I discovered we must use a Basic Header authorization with the token as the username and the customerId as the password.</p>

<p>In POSTMAN, it looks like this:</p>

<p><img src="/images/custom-gpt-ep1/authorization-header-postman.png" alt="Basic Authorization in POSTMAN" class="max-w-sm lg:max-w-lg" /></p>

<p>This authorization header is then used for all subsequent API requests.</p>

<p>To generate the authorization header, we simply Base64 encode the username:password and prepend Basic to it:</p>

<p><img src="/images/custom-gpt-ep1/authorization-header.png" alt="Basic Authorization header" class="max-w-sm lg:max-w-xl" /></p>

<p><strong>Another side note</strong>: We can‚Äôt use Open Authorization 2.0 (OAuth2) since there‚Äôs no official support for it in the third-party API. However, crafting our own OAuth wrapper could be a workaround, enabling anyone using our GPT to leverage these capabilities. If you‚Äôre interested in this feature, just ping me and I‚Äôll consider creating a tutorial just on that.</p>

<p>Now that we‚Äôre authorized, let‚Äôs delve into how to utilize the API effectively.</p>

<h3 id="retrieve-a-list-of-all-available-cars-within-a-certain-range">Retrieve a List of All Available Cars Within a Certain Range</h3>
<p>Initially, we hit the <code class="language-plaintext highlighter-rouge">pointsofinterest</code> endpoint, which fetches a list of all available cars.</p>

<p><img src="/images/custom-gpt-ep1/pointsofinterest-request.png" alt="Retrieve a list of all available cars" class="max-w-sm lg:max-w-xl" /></p>

<p>Here‚Äôs what the API responds with ‚Äî a comprehensive list of carsharing spots and the cars (referred to as <code class="language-plaintext highlighter-rouge">bookees</code>) available at each location.</p>

<p><img src="/images/custom-gpt-ep1/pointsofinterest-response.png" alt="Retrieve a list of all available cars" class="max-w-sm lg:max-w-2xl" /></p>

<p>Take a look at what a single <code class="language-plaintext highlighter-rouge">bookee</code> entry looks like. I‚Äôve marked the crucial details: <code class="language-plaintext highlighter-rouge">id</code>, <code class="language-plaintext highlighter-rouge">licenseNumber</code>, and <code class="language-plaintext highlighter-rouge">bookeeType</code>.</p>

<p><img src="/images/custom-gpt-ep1/bookee.png" alt="bookee entry" /></p>

<p>We‚Äôll keep the <code class="language-plaintext highlighter-rouge">bookee ID</code> in mind ‚Äî it‚Äôs key for later when we actually reserve a car.</p>

<p>With the roster of locations and vehicles in hand, our next move is to check for availability based on a specific date and time.</p>

<h3 id="request-availabilities-for-a-given-date-and-time">Request Availabilities for a Given Date and Time</h3>

<p>This is handled through the <code class="language-plaintext highlighter-rouge">bookingproposals</code> endpoint, tailored for this purpose.</p>

<p><img src="/images/custom-gpt-ep1/bookingproposals.png" alt="bookee entry" class="max-w-sm lg:max-w-xl" /></p>

<p>The app calculates the <code class="language-plaintext highlighter-rouge">lat</code> and <code class="language-plaintext highlighter-rouge">lng</code> coordinates by taking an address input in the location search bar:
<img src="/images/custom-gpt-ep1/location-lat-lng.png" alt="bookee entry" class="max-w-sm" /></p>

<p>These coordinates then anchor the URL, guiding most requests to scout for nearby cars. It‚Äôs smart because the response from our earlier call to the <code class="language-plaintext highlighter-rouge">pointsofinterest</code> endpoint uses these exact coordinates to determine the distance to the nearest available carsharing locations.</p>

<p><img src="/images/custom-gpt-ep1/distance-property.png" alt="bookee entry" class="max-w-sm lg:max-w-xl" /></p>

<p>Armed with a list of cars sorted by proximity, let‚Äôs dive into how the app locks in a reservation for a particular car on a chosen date and time.</p>

<h3 id="retrieve-a-reservation-id">Retrieve a Reservation ID</h3>
<p>After pinpointing our desired car within a 10,000-meter radius using the ‚ÄúbookeeId‚Äù and setting the time and date, we send a POST request to the <code class="language-plaintext highlighter-rouge">prelimbookings</code> endpoint. This crucial step fetches us a ‚Äúreservation ID,‚Äù a key piece needed for the next phase.</p>

<p><img src="/images/custom-gpt-ep1/prelimbookings-request.png" alt="prelimbookings request" class="max-w-sm lg:max-w-xl" /></p>

<p>The response contains the ID we‚Äôre looking for:</p>

<p><img src="/images/custom-gpt-ep1/prelimbookings-response.png" alt="prelimbookings request" class="max-w-sm lg:max-w-xl" /></p>

<h3 id="book-the-car-via-the-reservation-id">Book the Car via the Reservation ID</h3>
<p>With the reservation ID in hand, we make another POST request ‚Äî this time to <code class="language-plaintext highlighter-rouge">prelimbookings/${reservationId}/confirm</code>. This action solidifies our booking and provides a booking ID, which could be useful for any necessary cancellations later on.</p>

<p><img src="/images/custom-gpt-ep1/prelimbookings-confirm-request.png" alt="prelimbookings request" class="max-w-sm lg:max-w-xl" /></p>

<p>The response confirms our successful booking with the booking ID:</p>

<p><img src="/images/custom-gpt-ep1/prelimbookings-confirm-response.png" alt="prelimbookings request" class="max-w-sm lg:max-w-xl" /></p>

<p>Having navigated through the necessary API calls, we‚Äôre now set to construct a straightforward wrapper to simplify these interactions for our GPT.</p>

<h2 id="step-2-create-the-nodejs-api-wrapper">Step 2: Create the Node.js API Wrapper</h2>
<p>We‚Äôll spin up a simple express server to serve as the gateway for our custom GPT actions. ChatGPT will hit these endpoints, and our job is to relay these requests to the third-party API. In some cases, we‚Äôll also refine the response based on specific logic ‚Äî better we handle this part to ensure precision and avoid any less-than-ideal outcomes from ChatGPT.</p>

<p>For instance, our GPT should deliver a list of 5 cars that meet these criteria:</p>
<ul>
  <li>Proximity to our home address</li>
  <li>Cost-effectiveness for bookings exceeding 3 hours, where a longer walk to a slightly farther car could mean saving a few euros</li>
</ul>

<p><strong>Bonus</strong>: The GPT will also weigh the proximity of the car against its hourly cost. Here are the hourly rates for different car sizes:</p>
<ul>
  <li>XS = <strong>‚Ç¨1,60/hr</strong></li>
  <li>S = <strong>‚Ç¨2,10/hr</strong></li>
  <li>M = <strong>‚Ç¨2,70/hr</strong></li>
  <li>L = <strong>‚Ç¨3,40/hr</strong></li>
  <li>XL = <strong>‚Ç¨4,00/hr</strong></li>
</ul>

<p>For example, if a Type S car is within 200 meters, we‚Äôll book it ‚Äî even if a smaller, cheaper Type XS is a bit further out. This selective preference ensures we strike the right balance between cost and convenience.</p>

<p>Here‚Äôs how we set up this decision-making process (cheers, ChatGPT! üòÜ):</p>
<div class="language-js highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="c1">// Define priority map and cutoff distances</span>
<span class="kd">const</span> <span class="nx">priorityMap</span> <span class="o">=</span> <span class="p">{</span> <span class="dl">'</span><span class="s1">XS</span><span class="dl">'</span><span class="p">:</span> <span class="mi">1</span><span class="p">,</span> <span class="dl">'</span><span class="s1">S</span><span class="dl">'</span><span class="p">:</span> <span class="mi">2</span><span class="p">,</span> <span class="dl">'</span><span class="s1">M</span><span class="dl">'</span><span class="p">:</span> <span class="mi">3</span><span class="p">,</span> <span class="dl">'</span><span class="s1">M (Elektro)</span><span class="dl">'</span><span class="p">:</span> <span class="mi">3</span><span class="p">,</span> <span class="dl">'</span><span class="s1">L</span><span class="dl">'</span><span class="p">:</span> <span class="mi">4</span><span class="p">,</span> <span class="dl">'</span><span class="s1">XL</span><span class="dl">'</span><span class="p">:</span> <span class="mi">5</span> <span class="p">};</span>

<span class="kd">const</span> <span class="nx">distanceForConvenienceCutOff</span> <span class="o">=</span> <span class="mi">200</span><span class="p">;</span>

<span class="c1">// Adjust selection based on booking duration</span>
<span class="k">if</span> <span class="p">(</span><span class="nx">bookingDurationHours</span> <span class="o">&lt;</span> <span class="mi">3</span><span class="p">)</span> <span class="p">{</span>
    <span class="c1">// Prefer nearest cars if the booking is for less than 3 hours, with special consideration for 'S' within 200m</span>
    <span class="nx">cars</span><span class="p">.</span><span class="nx">sort</span><span class="p">((</span><span class="nx">a</span><span class="p">,</span> <span class="nx">b</span><span class="p">)</span> <span class="o">=&gt;</span> <span class="p">{</span>
        <span class="kd">const</span> <span class="nx">typeA</span> <span class="o">=</span> <span class="nx">priorityMap</span><span class="p">[</span><span class="nx">a</span><span class="p">.</span><span class="nx">bookeeType</span><span class="p">.</span><span class="nx">name</span><span class="p">];</span>
        <span class="kd">const</span> <span class="nx">typeB</span> <span class="o">=</span> <span class="nx">priorityMap</span><span class="p">[</span><span class="nx">b</span><span class="p">.</span><span class="nx">bookeeType</span><span class="p">.</span><span class="nx">name</span><span class="p">];</span>
        <span class="kd">const</span> <span class="nx">distDiff</span> <span class="o">=</span> <span class="nx">a</span><span class="p">.</span><span class="nx">distance</span> <span class="o">-</span> <span class="nx">b</span><span class="p">.</span><span class="nx">distance</span><span class="p">;</span>

        <span class="c1">// Check for 'XS' vs 'S' special condition</span>
        <span class="k">if</span> <span class="p">((</span><span class="nx">typeA</span> <span class="o">===</span> <span class="mi">1</span> <span class="o">&amp;&amp;</span> <span class="nx">typeB</span> <span class="o">===</span> <span class="mi">2</span><span class="p">)</span> <span class="o">||</span> <span class="p">(</span><span class="nx">typeA</span> <span class="o">===</span> <span class="mi">2</span> <span class="o">&amp;&amp;</span> <span class="nx">typeB</span> <span class="o">===</span> <span class="mi">1</span><span class="p">))</span> <span class="p">{</span>
            <span class="c1">// Prefer 'S' within 200m over 'XS' beyond 200m</span>
            <span class="k">if</span> <span class="p">(</span><span class="nx">typeA</span> <span class="o">===</span> <span class="mi">2</span> <span class="o">&amp;&amp;</span> <span class="nx">a</span><span class="p">.</span><span class="nx">distance</span> <span class="o">&lt;=</span> <span class="nx">distanceForConvenienceCutOff</span> <span class="o">&amp;&amp;</span> <span class="nx">b</span><span class="p">.</span><span class="nx">distance</span> <span class="o">&gt;</span> <span class="nx">distanceForConvenienceCutOff</span><span class="p">)</span> <span class="k">return</span> <span class="o">-</span><span class="mi">1</span><span class="p">;</span>

            <span class="c1">// Prefer 'S' within 200m over 'XS' beyond 200m</span>
            <span class="k">if</span> <span class="p">(</span><span class="nx">typeB</span> <span class="o">===</span> <span class="mi">2</span> <span class="o">&amp;&amp;</span> <span class="nx">b</span><span class="p">.</span><span class="nx">distance</span> <span class="o">&lt;=</span> <span class="nx">distanceForConvenienceCutOff</span> <span class="o">&amp;&amp;</span> <span class="nx">a</span><span class="p">.</span><span class="nx">distance</span> <span class="o">&gt;</span> <span class="nx">distanceForConvenienceCutOff</span><span class="p">)</span> <span class="k">return</span> <span class="mi">1</span><span class="p">;</span>
        <span class="p">}</span>

        <span class="c1">// Prioritize 'XS' cars explicitly when they compete with any other type</span>
        <span class="k">if</span> <span class="p">(</span><span class="nx">typeA</span> <span class="o">===</span> <span class="mi">1</span> <span class="o">||</span> <span class="nx">typeB</span> <span class="o">===</span> <span class="mi">1</span><span class="p">)</span> <span class="p">{</span>
            <span class="k">if</span> <span class="p">(</span><span class="nx">typeA</span> <span class="o">===</span> <span class="mi">1</span> <span class="o">&amp;&amp;</span> <span class="nx">typeB</span> <span class="o">!==</span> <span class="mi">1</span><span class="p">)</span> <span class="k">return</span> <span class="o">-</span><span class="mi">1</span><span class="p">;</span> <span class="c1">// Always prioritize 'XS' over others unless above condition met</span>
            <span class="k">if</span> <span class="p">(</span><span class="nx">typeB</span> <span class="o">===</span> <span class="mi">1</span> <span class="o">&amp;&amp;</span> <span class="nx">typeA</span> <span class="o">!==</span> <span class="mi">1</span><span class="p">)</span> <span class="k">return</span> <span class="mi">1</span><span class="p">;</span>  <span class="c1">// Always prioritize 'XS' over others unless above condition met</span>
        <span class="p">}</span>

        <span class="c1">// Compare types if both are 'XS' or 'S'</span>
        <span class="k">if</span> <span class="p">(</span><span class="nx">typeA</span> <span class="o">&lt;=</span> <span class="mi">2</span> <span class="o">&amp;&amp;</span> <span class="nx">typeB</span> <span class="o">&lt;=</span> <span class="mi">2</span><span class="p">)</span> <span class="p">{</span>
            <span class="k">return</span> <span class="nx">distDiff</span><span class="p">;</span>  <span class="c1">// Prefer closer car if both are 'XS' or 'S'</span>
        <span class="p">}</span>

        <span class="c1">// General case: sort by type then by distance</span>
        <span class="k">if</span> <span class="p">(</span><span class="nx">typeA</span> <span class="o">!==</span> <span class="nx">typeB</span><span class="p">)</span> <span class="k">return</span> <span class="nx">typeA</span> <span class="o">-</span> <span class="nx">typeB</span><span class="p">;</span>
        <span class="k">return</span> <span class="nx">distDiff</span><span class="p">;</span>
    <span class="p">});</span>
<span class="p">}</span> <span class="k">else</span> <span class="p">{</span>
    <span class="c1">// For longer bookings, prioritize cost over proximity</span>
    <span class="nx">cars</span><span class="p">.</span><span class="nx">sort</span><span class="p">((</span><span class="nx">a</span><span class="p">,</span> <span class="nx">b</span><span class="p">)</span> <span class="o">=&gt;</span> <span class="p">{</span>
        <span class="kd">const</span> <span class="nx">typeA</span> <span class="o">=</span> <span class="nx">priorityMap</span><span class="p">[</span><span class="nx">a</span><span class="p">.</span><span class="nx">bookeeType</span><span class="p">.</span><span class="nx">name</span><span class="p">];</span>
        <span class="kd">const</span> <span class="nx">typeB</span> <span class="o">=</span> <span class="nx">priorityMap</span><span class="p">[</span><span class="nx">b</span><span class="p">.</span><span class="nx">bookeeType</span><span class="p">.</span><span class="nx">name</span><span class="p">];</span>
        <span class="k">return</span> <span class="nx">typeA</span> <span class="o">-</span> <span class="nx">typeB</span><span class="p">;</span>
    <span class="p">});</span>
<span class="p">}</span>
</code></pre></div></div>

<p>Here you can see all the endpoints that we‚Äôll expose to our GPT:
<a href="https://github.com/MaxAIPlayground/gpt-carsharing-agent/blob/main/gpt-serve.js">gpt-serve.js</a></p>

<h2 id="step-3-create-the-custom-gpt">Step 3: Create the Custom GPT</h2>

<p>Besides the name and description, we‚Äôll want to enable the <code class="language-plaintext highlighter-rouge">Web Browsing</code> and <code class="language-plaintext highlighter-rouge">Code Interpreter</code> plugins.</p>

<p><img src="/images/custom-gpt-ep1/create-gpt-basic.png" alt="Basic custom GPT settings" />
Since we‚Äôre using this GPT for our own private purposes, we can make use of a conversation starter that contains our home address. If needed, we could extend this with different addresses for various use cases.</p>

<p><img src="/images/custom-gpt-ep1/conversation-starter.png" alt="Basic custom GPT settings" /></p>

<p>Now, let‚Äôs have a closer look at our instructions:</p>
<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>You are a GPT that enables a user to easily find nearby rides from a carsharing provider in a certain area of Germany. Your only job is to look up available rides, reserve them and finally, book a specific ride. A user can also list currently booked rides. If a user asks a question that has nothing to do with booking or cancelling a ride, don't even try to come up with an answer. Just politely ask the user whether he wants to look up a ride for a certain time.

You will follow these steps, in order:

1. Ask the user to state a "base" address which is used as a lookup for available nearby rides. This can be either a physical address or lat/long coordinates. Remember this address once given by the user. It serves as his base address from which he's looking for cars that are close to him. Only ever change this address if the user asks to change it.

2. If not already specified, always ask for the date and time for which the user wants to book a ride. A typical user input will be: "today between 7pm and 9pm" or "tomorrow between  8am and 6pm".  Do not continue to step 3 unless you have this required information (address + date/time). Always assume the actual current day if the user refers to "today". Look it up if necessary! If a user states only the day and month and no year, always assume the current year (2024).

3. Call cars to get a list of available cars for the given time frame. Use the required "lat", "lng", "start" and "end" parameters for this request.

4. If the user wants to make a reservation, call reservation to create a reservation. Use the required "start", "end" and "bookeeId" parameters for this request.

5. IF USER CONFIRMS: Call book to finalize the booking.

When passing "start" and "end" parameters to actions, make sure the format is UTC. However the time range the user gives is always the timezone Europe/Berlin.
When a user cancels a booking, first get a cancellation id via the cancel action. With this returned cancellation id, ask the user for confirmation of the cancellation. Upon confirmation of the user, call cancel-confirm. This will completely cancel the booking.

If you ask a question of the user, never answer it yourself. You may suggest answers, but you must have the user confirm.

Example conversation:
ChatGPT: Which address should I use as a base?
User: Klarastr. 55, 79106 Freiburg, Germany

ChatGPT: For which time do you want me to find nearby cars?
User: today between 7 and 9pm

ChatGPT: Here are the closest cars I found:
1) Hauptbahnhof/Wentzingerstr. (name), Toyota Aygo X (displayName), EM-SW 1710 (licenseNumber), "XS" (bookeeType.name), 231m Entfernung (distance)
2) Hauptbahnhof/Wentzingerstr. (name), Ford Fiesta (displayName), EM-SW 4020 (licenseNumber), "S" (bookeeType.name), 231m Entfernung (distance)
3) Wannerstr. 4 (name), MG 5 (displayName), EM-SW 4079 (licenseNumber), "M (Elektro)" (bookeeType.name), 385m Entfernung (distance)
4) ...
5) ...
User: Make a reservation for option 1)

ChatGPT: I made a reservation for Hauptbahnhof/Wentzingerstr. (name), Toyota Aygo X (displayName), EM-SW 1710 (licenseNumber), "XS" (bookeeType.name) for today between 22 and 23pm. Do you want me to proceed with the booking?
User: Yes

ChatGPT: OK, the booking is complete for today, 22pm - 23pm.  Details: Hauptbahnhof/Wentzingerstr. (name), Toyota Aygo X (displayName), EM-SW 1710 (licenseNumber), "XS" (bookeeType.name)
User: no reply expected
</code></pre></div></div>
<p>I make it clear to the GPT that it should always assume the current date when we mention ‚Äútoday‚Äù. This is important because I once had a mix-up where the GPT defaulted to 2023, leaving me puzzled about the unavailability of cars. üòÖ</p>

<p>Here‚Äôs how I make sure the GPT is on the right track:</p>
<div class="language-yaml highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="na">openapi</span><span class="pi">:</span> <span class="s">3.0.0</span>
<span class="na">info</span><span class="pi">:</span>
  <span class="na">title</span><span class="pi">:</span> <span class="s">Carsharing API Authentication</span>
  <span class="na">version</span><span class="pi">:</span> <span class="s">1.0.0</span>
<span class="na">servers</span><span class="pi">:</span>
  <span class="pi">-</span> <span class="na">url</span><span class="pi">:</span> <span class="s">&lt;YOUR_API_HOST&gt;</span>
<span class="na">paths</span><span class="pi">:</span>
  <span class="na">/gpt-carsharing-agent/auth</span><span class="pi">:</span>
    <span class="na">get</span><span class="pi">:</span>
      <span class="na">summary</span><span class="pi">:</span> <span class="s">Retreive the customerId and unique authentication id</span>
      <span class="na">description</span><span class="pi">:</span> <span class="s">Authenticates the user in case we get unauthorized responses from our carsharing endpoints</span>
      <span class="na">operationId</span><span class="pi">:</span> <span class="s">Basic Authentication</span>
      <span class="na">responses</span><span class="pi">:</span>
        <span class="s2">"</span><span class="s">200"</span><span class="err">:</span>
          <span class="na">description</span><span class="pi">:</span> <span class="s">Token created or retrieved successfully.</span>
          <span class="na">content</span><span class="pi">:</span>
            <span class="na">application/json</span><span class="pi">:</span>
              <span class="na">schema</span><span class="pi">:</span>
                <span class="na">type</span><span class="pi">:</span> <span class="s">object</span>
                <span class="na">properties</span><span class="pi">:</span>
                  <span class="na">token</span><span class="pi">:</span>
                    <span class="na">type</span><span class="pi">:</span> <span class="s">string</span>
                    <span class="na">description</span><span class="pi">:</span> <span class="s">The access token generated or retrieved.</span>
                  <span class="na">id</span><span class="pi">:</span>
                    <span class="na">type</span><span class="pi">:</span> <span class="s">string</span>
                    <span class="na">description</span><span class="pi">:</span> <span class="s">Unique identifier for the token.</span>
                  <span class="na">timeout</span><span class="pi">:</span>
                    <span class="na">type</span><span class="pi">:</span> <span class="s">string</span>
                    <span class="na">format</span><span class="pi">:</span> <span class="s">date-time</span>
                    <span class="na">description</span><span class="pi">:</span> <span class="s">Time when the token will no longer be valid for operations that could be completed earlier.</span>
                  <span class="na">expiry</span><span class="pi">:</span>
                    <span class="na">type</span><span class="pi">:</span> <span class="s">string</span>
                    <span class="na">format</span><span class="pi">:</span> <span class="s">date-time</span>
                    <span class="na">description</span><span class="pi">:</span> <span class="s">Expiration time of the token.</span>
                  <span class="na">customerId</span><span class="pi">:</span>
                    <span class="na">type</span><span class="pi">:</span> <span class="s">string</span>
                    <span class="na">description</span><span class="pi">:</span> <span class="s">Customer ID associated with the token.</span>
        <span class="s2">"</span><span class="s">400"</span><span class="err">:</span>
          <span class="na">description</span><span class="pi">:</span> <span class="s">Invalid request parameters or missing required fields.</span>
        <span class="s2">"</span><span class="s">401"</span><span class="err">:</span>
          <span class="na">description</span><span class="pi">:</span> <span class="s">Authentication failed due to invalid credentials.</span>
      <span class="na">security</span><span class="pi">:</span>
        <span class="pi">-</span> <span class="na">ApiKeyAuth</span><span class="pi">:</span> <span class="pi">[]</span>
  <span class="na">/gpt-carsharing-agent/cars</span><span class="pi">:</span>
    <span class="na">get</span><span class="pi">:</span>
      <span class="na">summary</span><span class="pi">:</span> <span class="s">Retrieve a list of available cars</span>
      <span class="na">operationId</span><span class="pi">:</span> <span class="s">cars</span>
      <span class="na">description</span><span class="pi">:</span> <span class="s">Retrieves a complete list of all cars no matter whether they're available for the given start/end dates.</span>
      <span class="na">parameters</span><span class="pi">:</span>
        <span class="pi">-</span> <span class="na">in</span><span class="pi">:</span> <span class="s">query</span>
          <span class="na">name</span><span class="pi">:</span> <span class="s">lat</span>
          <span class="na">required</span><span class="pi">:</span> <span class="no">true</span>
          <span class="na">schema</span><span class="pi">:</span>
            <span class="na">type</span><span class="pi">:</span> <span class="s">string</span>
          <span class="na">description</span><span class="pi">:</span> <span class="s">Latitude coordinate of the user's base starting point.</span>
          <span class="na">default</span><span class="pi">:</span> <span class="m">47.9969</span>
        <span class="pi">-</span> <span class="na">in</span><span class="pi">:</span> <span class="s">query</span>
          <span class="na">name</span><span class="pi">:</span> <span class="s">lng</span>
          <span class="na">required</span><span class="pi">:</span> <span class="no">true</span>
          <span class="na">schema</span><span class="pi">:</span>
            <span class="na">type</span><span class="pi">:</span> <span class="s">string</span>
          <span class="na">description</span><span class="pi">:</span> <span class="s">Longitude coordinate of the user's base starting point.</span>
          <span class="na">default</span><span class="pi">:</span> <span class="m">7.8398</span>
        <span class="pi">-</span> <span class="na">in</span><span class="pi">:</span> <span class="s">query</span>
          <span class="na">name</span><span class="pi">:</span> <span class="s">range</span>
          <span class="na">schema</span><span class="pi">:</span>
            <span class="na">type</span><span class="pi">:</span> <span class="s">string</span>
          <span class="na">description</span><span class="pi">:</span> <span class="s">Range in meters that is used as a radius to look for cars. Use default is not specified otherwise.</span>
          <span class="na">default</span><span class="pi">:</span> <span class="m">1000</span>
        <span class="pi">-</span> <span class="na">in</span><span class="pi">:</span> <span class="s">query</span>
          <span class="na">name</span><span class="pi">:</span> <span class="s">start</span>
          <span class="na">required</span><span class="pi">:</span> <span class="no">true</span>
          <span class="na">schema</span><span class="pi">:</span>
            <span class="na">type</span><span class="pi">:</span> <span class="s">string</span>
            <span class="na">format</span><span class="pi">:</span> <span class="s">date-time</span>
            <span class="na">description</span><span class="pi">:</span> <span class="s">Start time in ISO 8601 UTC format.</span>
          <span class="na">example</span><span class="pi">:</span> <span class="s">2024-04-12T19:00:00Z</span>
        <span class="pi">-</span> <span class="na">in</span><span class="pi">:</span> <span class="s">query</span>
          <span class="na">name</span><span class="pi">:</span> <span class="s">end</span>
          <span class="na">required</span><span class="pi">:</span> <span class="no">true</span>
          <span class="na">schema</span><span class="pi">:</span>
            <span class="na">type</span><span class="pi">:</span> <span class="s">string</span>
            <span class="na">format</span><span class="pi">:</span> <span class="s">date-time</span>
            <span class="na">description</span><span class="pi">:</span> <span class="s">End time in ISO 8601 UTC format.</span>
          <span class="na">example</span><span class="pi">:</span> <span class="s">2024-04-12T120:00:00Z</span>
      <span class="na">responses</span><span class="pi">:</span>
        <span class="s2">"</span><span class="s">200"</span><span class="err">:</span>
          <span class="na">description</span><span class="pi">:</span> <span class="s">A list of points of interest including places and cars.</span>
          <span class="na">content</span><span class="pi">:</span>
            <span class="na">application/json</span><span class="pi">:</span>
              <span class="na">schema</span><span class="pi">:</span>
                <span class="na">type</span><span class="pi">:</span> <span class="s">array</span>
                <span class="na">items</span><span class="pi">:</span>
                  <span class="na">$ref</span><span class="pi">:</span> <span class="s2">"</span><span class="s">#/components/schemas/Car"</span>
  <span class="na">/gpt-carsharing-agent/reservation</span><span class="pi">:</span>
    <span class="na">get</span><span class="pi">:</span>
      <span class="na">summary</span><span class="pi">:</span> <span class="s">Make a specific reservation for a car</span>
      <span class="na">operationId</span><span class="pi">:</span> <span class="s">reservation</span>
      <span class="na">description</span><span class="pi">:</span> <span class="s">Makes a reservation for a specific car and start/end date-time</span>
      <span class="na">parameters</span><span class="pi">:</span>
        <span class="pi">-</span> <span class="na">in</span><span class="pi">:</span> <span class="s">query</span>
          <span class="na">name</span><span class="pi">:</span> <span class="s">start</span>
          <span class="na">required</span><span class="pi">:</span> <span class="no">true</span>
          <span class="na">schema</span><span class="pi">:</span>
            <span class="na">type</span><span class="pi">:</span> <span class="s">string</span>
            <span class="na">format</span><span class="pi">:</span> <span class="s">date-time</span>
            <span class="na">description</span><span class="pi">:</span> <span class="s">Start time in ISO 8601 UTC format.</span>
          <span class="na">example</span><span class="pi">:</span> <span class="s">2024-04-12T19:00:00Z</span>
        <span class="pi">-</span> <span class="na">in</span><span class="pi">:</span> <span class="s">query</span>
          <span class="na">name</span><span class="pi">:</span> <span class="s">end</span>
          <span class="na">required</span><span class="pi">:</span> <span class="no">true</span>
          <span class="na">example</span><span class="pi">:</span> <span class="s">2024-04-12T120:00:00Z</span>
          <span class="na">schema</span><span class="pi">:</span>
            <span class="na">type</span><span class="pi">:</span> <span class="s">string</span>
            <span class="na">format</span><span class="pi">:</span> <span class="s">date-time</span>
            <span class="na">description</span><span class="pi">:</span> <span class="s">End time in ISO 8601 UTC format.</span>
        <span class="pi">-</span> <span class="na">in</span><span class="pi">:</span> <span class="s">query</span>
          <span class="na">name</span><span class="pi">:</span> <span class="s">bookeeId</span>
          <span class="na">required</span><span class="pi">:</span> <span class="no">true</span>
          <span class="na">example</span><span class="pi">:</span> <span class="m">20229</span>
          <span class="na">schema</span><span class="pi">:</span>
            <span class="na">type</span><span class="pi">:</span> <span class="s">string</span>
            <span class="na">description</span><span class="pi">:</span> <span class="s">The id of the car to reserve</span>
      <span class="na">responses</span><span class="pi">:</span>
        <span class="s2">"</span><span class="s">200"</span><span class="err">:</span>
          <span class="na">description</span><span class="pi">:</span> <span class="s">An object containing a unique reservation id to confirm the reservation</span>
          <span class="na">content</span><span class="pi">:</span>
            <span class="na">application/json</span><span class="pi">:</span>
              <span class="na">schema</span><span class="pi">:</span>
                <span class="na">type</span><span class="pi">:</span> <span class="s">object</span>
                <span class="na">$ref</span><span class="pi">:</span> <span class="s2">"</span><span class="s">#/components/schemas/Reservation"</span>
      <span class="err">  </span><span class="s2">"</span><span class="s">400"</span><span class="err">:</span>
          <span class="na">description</span><span class="pi">:</span> <span class="s">The reservation can't be made because it's not available any longer</span>
  <span class="na">/gpt-carsharing-agent/book</span><span class="pi">:</span>
    <span class="na">get</span><span class="pi">:</span>
      <span class="na">summary</span><span class="pi">:</span> <span class="s">Create a booking for a reservation id</span>
      <span class="na">operationId</span><span class="pi">:</span> <span class="s">book</span>
      <span class="na">description</span><span class="pi">:</span> <span class="s">Creates a booking for a specific car given a reservation id (from /reservation endpoint)</span>
      <span class="na">parameters</span><span class="pi">:</span>
        <span class="pi">-</span> <span class="na">in</span><span class="pi">:</span> <span class="s">query</span>
          <span class="na">name</span><span class="pi">:</span> <span class="s">reservationId</span>
          <span class="na">required</span><span class="pi">:</span> <span class="no">true</span>
          <span class="na">schema</span><span class="pi">:</span>
            <span class="na">type</span><span class="pi">:</span> <span class="s">string</span>
            <span class="na">description</span><span class="pi">:</span> <span class="s">The unique reservation id to make a booking for</span>
          <span class="na">example</span><span class="pi">:</span> <span class="s">9Fx92r3GUugBWUKhFsvHgIV5d3i3pxq6JFniw8-3YEud</span>
      <span class="na">responses</span><span class="pi">:</span>
        <span class="s2">"</span><span class="s">200"</span><span class="err">:</span>
          <span class="na">description</span><span class="pi">:</span> <span class="s">An object containing a unique booking id to confirm the booking</span>
          <span class="na">content</span><span class="pi">:</span>
            <span class="na">application/json</span><span class="pi">:</span>
              <span class="na">schema</span><span class="pi">:</span>
                <span class="na">type</span><span class="pi">:</span> <span class="s">object</span>
                <span class="na">$ref</span><span class="pi">:</span> <span class="s2">"</span><span class="s">#/components/schemas/Booking"</span>
      <span class="err">  </span><span class="s2">"</span><span class="s">400"</span><span class="err">:</span>
          <span class="na">description</span><span class="pi">:</span> <span class="s">The booking can't be made for whatever reason (probably incorrect reservation id)</span>
  <span class="na">/gpt-carsharing-agent/bookings</span><span class="pi">:</span>
    <span class="na">get</span><span class="pi">:</span>
      <span class="na">summary</span><span class="pi">:</span> <span class="s">List all current bookings</span>
      <span class="na">operationId</span><span class="pi">:</span> <span class="s">listbookings</span>
      <span class="na">description</span><span class="pi">:</span> <span class="s">Lists all current bookings</span>
      <span class="na">responses</span><span class="pi">:</span>
        <span class="s2">"</span><span class="s">200"</span><span class="err">:</span>
          <span class="na">description</span><span class="pi">:</span> <span class="s">An object containing the bookings</span>
          <span class="na">content</span><span class="pi">:</span>
            <span class="na">application/json</span><span class="pi">:</span>
              <span class="na">schema</span><span class="pi">:</span>
                <span class="na">type</span><span class="pi">:</span> <span class="s">object</span>
                <span class="na">$ref</span><span class="pi">:</span> <span class="s2">"</span><span class="s">#/components/schemas/BookingListItem"</span>
  <span class="na">/gpt-carsharing-agent/cancel</span><span class="pi">:</span>
    <span class="na">get</span><span class="pi">:</span>
      <span class="na">summary</span><span class="pi">:</span> <span class="s">Cancel a specific booking</span>
      <span class="na">operationId</span><span class="pi">:</span> <span class="s">cancel</span>
      <span class="na">description</span><span class="pi">:</span> <span class="s">Cancel a specific  booking</span>
      <span class="na">parameters</span><span class="pi">:</span>
        <span class="pi">-</span> <span class="na">in</span><span class="pi">:</span> <span class="s">query</span>
          <span class="na">name</span><span class="pi">:</span> <span class="s">bookingId</span>
          <span class="na">required</span><span class="pi">:</span> <span class="no">true</span>
          <span class="na">schema</span><span class="pi">:</span>
            <span class="na">type</span><span class="pi">:</span> <span class="s">string</span>
            <span class="na">description</span><span class="pi">:</span> <span class="s">The unique booking id</span>
          <span class="na">example</span><span class="pi">:</span> <span class="s">131_1995963</span>
      <span class="na">responses</span><span class="pi">:</span>
        <span class="s2">"</span><span class="s">200"</span><span class="err">:</span>
          <span class="na">description</span><span class="pi">:</span> <span class="s">Success</span>
  <span class="na">/gpt-carsharing-agent/cancel-confirm</span><span class="pi">:</span>
    <span class="na">get</span><span class="pi">:</span>
      <span class="na">summary</span><span class="pi">:</span> <span class="s">Confirm the cancellation of a specific booking</span>
      <span class="na">operationId</span><span class="pi">:</span> <span class="s">cancelconfirm</span>
      <span class="na">description</span><span class="pi">:</span> <span class="s">Confirm the cancellation of a specific booking</span>
      <span class="na">parameters</span><span class="pi">:</span>
        <span class="pi">-</span> <span class="na">in</span><span class="pi">:</span> <span class="s">query</span>
          <span class="na">name</span><span class="pi">:</span> <span class="s">cancellationId</span>
          <span class="na">required</span><span class="pi">:</span> <span class="no">true</span>
          <span class="na">schema</span><span class="pi">:</span>
            <span class="na">type</span><span class="pi">:</span> <span class="s">string</span>
            <span class="na">description</span><span class="pi">:</span> <span class="s">The cancellation id</span>
          <span class="na">example</span><span class="pi">:</span> <span class="s">ZupLy2uA8FNPZKGIJmH9vD5Kez1ca3K1pmkIpEM4qDfs</span>
      <span class="na">responses</span><span class="pi">:</span>
        <span class="s2">"</span><span class="s">200"</span><span class="err">:</span>
          <span class="na">description</span><span class="pi">:</span> <span class="s">An object containing the cancellation confirmation</span>
          <span class="na">content</span><span class="pi">:</span>
            <span class="na">application/json</span><span class="pi">:</span>
              <span class="na">schema</span><span class="pi">:</span>
                <span class="na">type</span><span class="pi">:</span> <span class="s">object</span>
                <span class="na">$ref</span><span class="pi">:</span> <span class="s2">"</span><span class="s">#/components/schemas/CancellationConfirmation"</span>
<span class="na">components</span><span class="pi">:</span>
  <span class="na">schemas</span><span class="pi">:</span>
    <span class="na">Car</span><span class="pi">:</span>
      <span class="na">type</span><span class="pi">:</span> <span class="s">object</span>
      <span class="na">properties</span><span class="pi">:</span>
        <span class="na">id</span><span class="pi">:</span>
          <span class="na">type</span><span class="pi">:</span> <span class="s">string</span>
        <span class="na">geoCoordinate</span><span class="pi">:</span>
          <span class="na">$ref</span><span class="pi">:</span> <span class="s2">"</span><span class="s">#/components/schemas/GeoCoordinate"</span>
        <span class="na">places</span><span class="pi">:</span>
          <span class="na">type</span><span class="pi">:</span> <span class="s">array</span>
          <span class="na">items</span><span class="pi">:</span>
            <span class="na">$ref</span><span class="pi">:</span> <span class="s2">"</span><span class="s">#/components/schemas/Place"</span>
    <span class="na">GeoCoordinate</span><span class="pi">:</span>
      <span class="na">type</span><span class="pi">:</span> <span class="s">object</span>
      <span class="na">properties</span><span class="pi">:</span>
        <span class="na">latitude</span><span class="pi">:</span>
          <span class="na">type</span><span class="pi">:</span> <span class="s">number</span>
          <span class="na">format</span><span class="pi">:</span> <span class="s">double</span>
        <span class="na">longitude</span><span class="pi">:</span>
          <span class="na">type</span><span class="pi">:</span> <span class="s">number</span>
          <span class="na">format</span><span class="pi">:</span> <span class="s">double</span>
    <span class="na">TimeRange</span><span class="pi">:</span>
      <span class="na">type</span><span class="pi">:</span> <span class="s">object</span>
      <span class="na">properties</span><span class="pi">:</span>
        <span class="na">start</span><span class="pi">:</span>
          <span class="na">type</span><span class="pi">:</span> <span class="s">string</span>
          <span class="na">format</span><span class="pi">:</span> <span class="s">date-time</span>
          <span class="na">description</span><span class="pi">:</span> <span class="s">Time when the token will no longer be valid for operations that could be completed earlier.</span>
        <span class="na">end</span><span class="pi">:</span>
          <span class="na">type</span><span class="pi">:</span> <span class="s">string</span>
          <span class="na">format</span><span class="pi">:</span> <span class="s">date-time</span>
          <span class="na">description</span><span class="pi">:</span> <span class="s">Time when the token will no longer be valid for operations that could be completed earlier.</span>
    <span class="na">Place</span><span class="pi">:</span>
      <span class="na">type</span><span class="pi">:</span> <span class="s">object</span>
      <span class="na">properties</span><span class="pi">:</span>
        <span class="na">id</span><span class="pi">:</span>
          <span class="na">type</span><span class="pi">:</span> <span class="s">string</span>
        <span class="na">provId</span><span class="pi">:</span>
          <span class="na">type</span><span class="pi">:</span> <span class="s">string</span>
        <span class="na">name</span><span class="pi">:</span>
          <span class="na">type</span><span class="pi">:</span> <span class="s">string</span>
        <span class="na">geoCoordinate</span><span class="pi">:</span>
          <span class="na">$ref</span><span class="pi">:</span> <span class="s2">"</span><span class="s">#/components/schemas/GeoCoordinate"</span>
        <span class="na">isFixed</span><span class="pi">:</span>
          <span class="na">type</span><span class="pi">:</span> <span class="s">boolean</span>
        <span class="na">bookees</span><span class="pi">:</span>
          <span class="na">type</span><span class="pi">:</span> <span class="s">array</span>
          <span class="na">items</span><span class="pi">:</span>
            <span class="na">$ref</span><span class="pi">:</span> <span class="s2">"</span><span class="s">#/components/schemas/Bookee"</span>
        <span class="na">address</span><span class="pi">:</span>
          <span class="na">$ref</span><span class="pi">:</span> <span class="s2">"</span><span class="s">#/components/schemas/Address"</span>
        <span class="na">poolElementCount</span><span class="pi">:</span>
          <span class="na">type</span><span class="pi">:</span> <span class="s">integer</span>
        <span class="na">distance</span><span class="pi">:</span>
          <span class="na">type</span><span class="pi">:</span> <span class="s">number</span>
          <span class="na">format</span><span class="pi">:</span> <span class="s">double</span>
    <span class="na">Bookee</span><span class="pi">:</span>
      <span class="na">type</span><span class="pi">:</span> <span class="s">object</span>
      <span class="na">properties</span><span class="pi">:</span>
        <span class="na">id</span><span class="pi">:</span>
          <span class="na">type</span><span class="pi">:</span> <span class="s">string</span>
        <span class="na">provId</span><span class="pi">:</span>
          <span class="na">type</span><span class="pi">:</span> <span class="s">string</span>
        <span class="na">name</span><span class="pi">:</span>
          <span class="na">type</span><span class="pi">:</span> <span class="s">string</span>
        <span class="na">isPool</span><span class="pi">:</span>
          <span class="na">type</span><span class="pi">:</span> <span class="s">boolean</span>
        <span class="na">displayName</span><span class="pi">:</span>
          <span class="na">type</span><span class="pi">:</span> <span class="s">string</span>
        <span class="na">locality</span><span class="pi">:</span>
          <span class="na">type</span><span class="pi">:</span> <span class="s">string</span>
        <span class="na">slotBased</span><span class="pi">:</span>
          <span class="na">type</span><span class="pi">:</span> <span class="s">boolean</span>
        <span class="na">fuelLevel</span><span class="pi">:</span>
          <span class="na">type</span><span class="pi">:</span> <span class="s">number</span>
        <span class="na">isElectroMobile</span><span class="pi">:</span>
          <span class="na">type</span><span class="pi">:</span> <span class="s">boolean</span>
        <span class="na">licenseNumber</span><span class="pi">:</span>
          <span class="na">type</span><span class="pi">:</span> <span class="s">string</span>
        <span class="na">bookeeType</span><span class="pi">:</span>
          <span class="na">$ref</span><span class="pi">:</span> <span class="s2">"</span><span class="s">#/components/schemas/BookeeType"</span>
        <span class="na">useMode</span><span class="pi">:</span>
          <span class="na">type</span><span class="pi">:</span> <span class="s">string</span>
        <span class="na">returnLocation</span><span class="pi">:</span>
          <span class="na">type</span><span class="pi">:</span> <span class="s">string</span>
        <span class="na">instantAccess</span><span class="pi">:</span>
          <span class="na">type</span><span class="pi">:</span> <span class="s">boolean</span>
        <span class="na">advanceBooking</span><span class="pi">:</span>
          <span class="na">type</span><span class="pi">:</span> <span class="s">boolean</span>
        <span class="na">openEnd</span><span class="pi">:</span>
          <span class="na">type</span><span class="pi">:</span> <span class="s">boolean</span>
        <span class="na">bookableOnPremises</span><span class="pi">:</span>
          <span class="na">type</span><span class="pi">:</span> <span class="s">boolean</span>
        <span class="na">bookableRemote</span><span class="pi">:</span>
          <span class="na">type</span><span class="pi">:</span> <span class="s">boolean</span>
        <span class="na">poolElementCount</span><span class="pi">:</span>
          <span class="na">type</span><span class="pi">:</span> <span class="s">integer</span>
    <span class="na">BookeeType</span><span class="pi">:</span>
      <span class="na">type</span><span class="pi">:</span> <span class="s">object</span>
      <span class="na">properties</span><span class="pi">:</span>
        <span class="na">id</span><span class="pi">:</span>
          <span class="na">type</span><span class="pi">:</span> <span class="s">string</span>
        <span class="na">provId</span><span class="pi">:</span>
          <span class="na">type</span><span class="pi">:</span> <span class="s">string</span>
        <span class="na">name</span><span class="pi">:</span>
          <span class="na">type</span><span class="pi">:</span> <span class="s">string</span>
    <span class="na">Address</span><span class="pi">:</span>
      <span class="na">type</span><span class="pi">:</span> <span class="s">object</span>
      <span class="na">properties</span><span class="pi">:</span>
        <span class="na">street</span><span class="pi">:</span>
          <span class="na">type</span><span class="pi">:</span> <span class="s">string</span>
        <span class="na">streetNr</span><span class="pi">:</span>
          <span class="na">type</span><span class="pi">:</span> <span class="s">string</span>
        <span class="na">postalCode</span><span class="pi">:</span>
          <span class="na">type</span><span class="pi">:</span> <span class="s">string</span>
        <span class="na">city</span><span class="pi">:</span>
          <span class="na">type</span><span class="pi">:</span> <span class="s">string</span>
        <span class="na">country</span><span class="pi">:</span>
          <span class="na">type</span><span class="pi">:</span> <span class="s">string</span>
    <span class="na">Reservation</span><span class="pi">:</span>
      <span class="na">type</span><span class="pi">:</span> <span class="s">object</span>
      <span class="na">properties</span><span class="pi">:</span>
        <span class="na">id</span><span class="pi">:</span>
          <span class="na">type</span><span class="pi">:</span> <span class="s">string</span>
          <span class="na">description</span><span class="pi">:</span> <span class="s">The unique reservation id that is used to confirm a reservation</span>
        <span class="na">timeRange</span><span class="pi">:</span>
          <span class="na">$ref</span><span class="pi">:</span> <span class="s2">"</span><span class="s">#/components/schemas/TimeRange"</span>
        <span class="na">bookeeId</span><span class="pi">:</span>
          <span class="na">type</span><span class="pi">:</span> <span class="s">string</span>
          <span class="na">description</span><span class="pi">:</span> <span class="s">The id of the car in question</span>
    <span class="na">Booking</span><span class="pi">:</span>
      <span class="na">type</span><span class="pi">:</span> <span class="s">object</span>
      <span class="na">properties</span><span class="pi">:</span>
        <span class="na">id</span><span class="pi">:</span>
          <span class="na">type</span><span class="pi">:</span> <span class="s">string</span>
          <span class="na">description</span><span class="pi">:</span> <span class="s">The booking id</span>
        <span class="na">timeRange</span><span class="pi">:</span>
          <span class="na">$ref</span><span class="pi">:</span> <span class="s2">"</span><span class="s">#/components/schemas/TimeRange"</span>
    <span class="na">BookingListItem</span><span class="pi">:</span>
      <span class="na">type</span><span class="pi">:</span> <span class="s">object</span>
      <span class="na">properties</span><span class="pi">:</span>
        <span class="na">id</span><span class="pi">:</span>
          <span class="na">type</span><span class="pi">:</span> <span class="s">string</span>
          <span class="na">description</span><span class="pi">:</span> <span class="s">The booking id</span>
        <span class="na">timeRange</span><span class="pi">:</span>
          <span class="na">$ref</span><span class="pi">:</span> <span class="s2">"</span><span class="s">#/components/schemas/TimeRange"</span>
        <span class="na">bookeeId</span><span class="pi">:</span>
          <span class="na">type</span><span class="pi">:</span> <span class="s">string</span>
          <span class="na">example</span><span class="pi">:</span> <span class="s">B131_1945963</span>
    <span class="na">CancellationConfirmation</span><span class="pi">:</span>
      <span class="na">type</span><span class="pi">:</span> <span class="s">object</span>
      <span class="na">properties</span><span class="pi">:</span>
        <span class="na">id</span><span class="pi">:</span>
          <span class="na">type</span><span class="pi">:</span> <span class="s">string</span>
          <span class="na">description</span><span class="pi">:</span> <span class="s">The booking that was cancelled</span>
        <span class="na">timeRange</span><span class="pi">:</span>
          <span class="na">$ref</span><span class="pi">:</span> <span class="s2">"</span><span class="s">#/components/schemas/TimeRange"</span>
        <span class="na">cancelled</span><span class="pi">:</span>
          <span class="na">type</span><span class="pi">:</span> <span class="s">boolean</span>
          <span class="na">description</span><span class="pi">:</span> <span class="s">Whether the booking was indeed cancelled or not</span>
  <span class="na">securitySchemes</span><span class="pi">:</span>
    <span class="na">BasicAuth</span><span class="pi">:</span>
      <span class="na">type</span><span class="pi">:</span> <span class="s">http</span>
      <span class="na">scheme</span><span class="pi">:</span> <span class="s">basic</span>
</code></pre></div></div>

<p>I refer directly to endpoints defined in my action. This structure nearly eliminates the chance for GPT to make errors or construct invalid requests. We use a detailed OpenAPI specification so our GPT knows exactly how to handle the requests needed. Check out the parsed schema actions after loading them into the GPT editor:</p>

<p><img src="/images/custom-gpt-ep1/available-actions.png" alt="Custom GPT actions" /></p>

<h2 id="step-4-launch-the-api-wrapper">Step 4: Launch the API Wrapper</h2>
<p>Ready to get this wrapper up and running? First, clone the repo from <a href="https://github.com/MaxAIPlayground/gpt-carsharing-agent" title="github.com/MaxAIPlayground/gpt-carsharing-agent" target="_blank">repo</a>. Next, run <code class="language-plaintext highlighter-rouge">npm install</code> to get the necessary packages. Don‚Äôt forget to set up your <code class="language-plaintext highlighter-rouge">.env</code> with your credentials and a designated port. Kick things off with <code class="language-plaintext highlighter-rouge">node gpt-serve.js</code>. To ensure everything operates smoothly in the background, I opt for supervisord. Here‚Äôs an example configuration:</p>
<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>[program:my-gpt-daemon]
directory=/home/user/gpt/gpt-serve.js
command=node gpt-serve.js
autostart=true
autorestart=true
environment=NODE_ENV=production
</code></pre></div></div>
<p>Keep an eye on the <code class="language-plaintext highlighter-rouge">error.log</code> to catch any potential issues early. It‚Äôs also a great tool for debugging the API requests your GPT is making ‚Äî definitely handy for ensuring things are running as expected.</p>

<h2 id="step-5-demo-time">Step 5: Demo Time</h2>

<p>Now for the fun part ‚Äî let‚Äôs see our custom GPT in action! We kick off with our preset home address as the conversation starter:</p>

<p><img src="/images/custom-gpt-ep1/demo-conversation-starter.png" alt="Conversation Starter" class="max-w-xs mx-auto" /></p>

<p><br />
After feeding the GPT a specific time and date, it quickly sifts through the data and presents the top 5 available cars:</p>
<div class="xs:flex justify-center">
    <img class="mx-auto xs:mx-1 xs:w-1/2 xs:max-w-72 !mt-0" src="/images/custom-gpt-ep1/demo-time-location.png" />
    <img class="mx-auto xs:mx-1 xs:w-1/2 xs:max-w-72 !mt-0" src="/images/custom-gpt-ep1/demo-cars-result.png" />
</div>

<p>Because I‚Äôm lazy, I opt for Option 3 ‚Äì the closest and most affordable option, a Type XS car. Let‚Äôs confirm the booking:</p>
<div class="xs:flex justify-center">
    <img class="mx-auto xs:mx-1 xs:w-1/2 xs:max-w-72 !mt-0" src="/images/custom-gpt-ep1/demo-option-3.png" />
    <img class="mx-auto xs:mx-1 xs:w-1/2 xs:max-w-72 !mt-0" src="/images/custom-gpt-ep1/demo-final-booking.png" />
</div>

<p>And there you have it. This GPT setup not only saves time but also makes car rental a hassle-free experience. üöó</p>

<h2 id="taking-it-further">Taking It further</h2>

<h3 id="make-the-custom-gpt-public-implement-an-oauth2-wrapper">Make the Custom GPT Public (Implement an OAuth2 Wrapper)</h3>
<p>Given how useful this custom GPT could be for other ChatGPT enthusiasts, it‚Äôs worth considering making it public. Since we‚Äôre handling an unofficial API, implementing our own OAuth2 wrapper would be essential. This setup would allow users to authenticate using their own credentials without needing a node.js server. Basically, we‚Äôd configure OAuth2 with a custom redirect URL to manage authentication smoothly.</p>

<p><strong>Side note</strong>: Here‚Äôs how you‚Äôd set up OAuth2 authentication for a custom GPT:</p>

<p><img src="/images/custom-gpt-ep1/oauth-setting.png" alt="Custom GPT Oauth Setting" class="max-w-xs" /></p>

<p>A closer look at the OAuth settings:</p>

<p><img src="/images/custom-gpt-ep1/oauth-setting-details.png" alt="Custom GPT Oauth Setting Details" class="max-w-sm" /></p>

<p>The <code class="language-plaintext highlighter-rouge">Client Secret</code> safeguards your app‚Äôs credentials, while the <code class="language-plaintext highlighter-rouge">Client ID</code> uniquely identifies it. This distinction ensures that only authorized users can interact with the authorization server, maintaining security and access control.</p>

<p>Typically, the Authorization URL initiates a login screen for the user. Upon successful login, the Token URL is called, issuing an <code class="language-plaintext highlighter-rouge">access_token</code>:</p>
<div class="language-json highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="p">{</span><span class="w">
  </span><span class="nl">"access_token"</span><span class="p">:</span><span class="s2">"a3B8F71c2E9d44f3B6e0B8cA47e9D7b156cEe40B8bDeB"</span><span class="p">,</span><span class="w">
  </span><span class="nl">"token_type"</span><span class="p">:</span><span class="w"> </span><span class="s2">"Bearer"</span><span class="p">,</span><span class="w">
  </span><span class="nl">"expires_in"</span><span class="p">:</span><span class="w"> </span><span class="mi">3600</span><span class="p">,</span><span class="w">
  </span><span class="nl">"refresh_token"</span><span class="p">:</span><span class="w"> </span><span class="s2">"a9R7tG5y2S0p1F8s3D7k6L0j9H2z1X0c1M5b6N3"</span><span class="p">,</span><span class="w">
  </span><span class="nl">"scope"</span><span class="p">:</span><span class="w"> </span><span class="s2">"create"</span><span class="w">
</span><span class="p">}</span><span class="w">
</span></code></pre></div></div>

<p>This <code class="language-plaintext highlighter-rouge">access_token</code> enables our GPT to authenticate subsequent requests, providing access to the 3rd party API on a per-user basis. Quite nifty, right? This makes it possible for our GPT to interact with APIs that require individual user authentication.</p>

<p>Interested in seeing this in action? If you‚Äôd like a demo or more details on setting up an OAuth wrapper for this type of use case, shoot me an <a href="mailto:aiwithmax@gmail.com" title="Send me an email">email</a>. I‚Äôm eager to expand on this if there‚Äôs enough interest.</p>

<h3 id="extend-a-current-booking-while-busy-driving">Extend a Current Booking While Busy Driving</h3>
<p>Here‚Äôs another scenario: you‚Äôre rushing to return the car and realize too late that you should‚Äôve booked it for longer. Rather than fumbling with the app while driving, why not just tell the GPT to extend the booking using voice commands? This feature could save you from a lot of stress and hassle, especially if the current reservation allows for an extension.</p>

<h3 id="connect-multiple-carsharing-providers-for-parallel-lookups">Connect Multiple Carsharing Providers for Parallel Lookups</h3>
<p>Since I juggle between two different carsharing services, merging these searches would be super beneficial. It would streamline the process, offering a one-stop solution for checking availability across multiple providers simultaneously.</p>

<p>All the source code is available on GitHub. Check it out at:
<a href="https://github.com/MaxAIPlayground/gpt-carsharing-agent" target="_blank">MaxAIPlayground/gpt-carsharing-agent</a></p>

<h4 id="tools-used">Tools Used</h4>
<ul>
  <li>ChatGPT 4 (requires a Plus subscription)</li>
  <li>Custom GPT + actions</li>
  <li>OpenAPI</li>
  <li>node.js (Express)</li>
  <li>supervisord</li>
  <li>Postman</li>
</ul>]]></content><author><name></name></author><category term="chatgpt" /><category term="custom-gpt" /><summary type="html"><![CDATA[The idea: Employ a customized GPT to handle genuinely useful tasks for me.]]></summary><media:thumbnail xmlns:media="http://search.yahoo.com/mrss/" url="http://localhost:4000/images/custom-gpt-ep1/cover.png" /><media:content medium="image" url="http://localhost:4000/images/custom-gpt-ep1/cover.png" xmlns:media="http://search.yahoo.com/mrss/" /></entry></feed>